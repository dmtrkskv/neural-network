/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Layer.ts":
/*!**********************!*\
  !*** ./src/Layer.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Neuron_1 = __webpack_require__(/*! ./Neuron */ \"./src/Neuron.ts\");\r\n/**\r\n * Слой при прямом и обратном распространении принимает все значения\r\n * соседнего слоя и каждый нейрон выбирает нужные значения для себя.\r\n */\r\nvar Layer = /** @class */ (function () {\r\n    function Layer(neuronsNumber, eachNeuronInputsNumber) {\r\n        this.neurons = [];\r\n        for (var i = 0; i < neuronsNumber; i++) {\r\n            this.neurons[i] = new Neuron_1.Neuron(eachNeuronInputsNumber);\r\n        }\r\n    }\r\n    Layer.prototype.activate = function (previousLayerOutputs) {\r\n        this.neurons.forEach(function (neuron) {\r\n            neuron.activate(previousLayerOutputs);\r\n        });\r\n    };\r\n    Layer.prototype.updateDeltas = function (gradientsForNeurons) {\r\n        this.neurons.forEach(function (neuron, neuronOutputIndex) {\r\n            neuron.updateDelta(gradientsForNeurons[neuronOutputIndex]);\r\n        });\r\n    };\r\n    Layer.prototype.updateWeights = function (learningRate) {\r\n        this.neurons.forEach(function (neuron) { return neuron.updateWeights(learningRate); });\r\n    };\r\n    /**\r\n     * Возвращает градиенты для нейронов, влияющих на данный слой в виде массива.\r\n     */\r\n    Layer.prototype.getGradientsForPreviousLayer = function (inputNeuronsNumber) {\r\n        var gradients = [];\r\n        for (var i = 0; i < inputNeuronsNumber; i++) {\r\n            gradients.push(this.getGradientForInputNeuron(i));\r\n        }\r\n        return gradients;\r\n    };\r\n    /**\r\n     * Предполагается, что у каждого нейрона порядок весов соответствует порядку нейронов в предыдущем слое.\r\n     * В перспективе, в неполносвязной модели, каждый нейрон будет иметь\r\n     * таблицу индексов входящих в него нейронов.\r\n     */\r\n    Layer.prototype.getGradientForInputNeuron = function (inputNeuronIndex) {\r\n        return this.neurons.reduce(function (accum, neuron) {\r\n            return accum + neuron.getGradientByInputIndex(inputNeuronIndex);\r\n        }, 0);\r\n    };\r\n    Object.defineProperty(Layer.prototype, \"outputs\", {\r\n        get: function () {\r\n            return this.neurons.map(function (neuron) { return neuron.output; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Layer.prototype, \"size\", {\r\n        get: function () {\r\n            return this.neurons.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Layer.prototype.reinitializeWeights = function () {\r\n        this.neurons.forEach(function (neuron) { return neuron.reinitializeWeights(); });\r\n    };\r\n    return Layer;\r\n}());\r\nexports.Layer = Layer;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvTGF5ZXIudHM/NmM4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNFQUEyQztBQWMzQzs7O0dBR0c7QUFFSDtJQUdJLGVBQ0UsYUFBcUIsRUFDckIsc0JBQThCO1FBSnRCLFlBQU8sR0FBYyxFQUFFLENBQUM7UUFNaEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGFBQWEsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN0QyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksZUFBTSxDQUFDLHNCQUFzQixDQUFDLENBQUM7U0FDdEQ7SUFDSCxDQUFDO0lBRU0sd0JBQVEsR0FBZixVQUFnQixvQkFBOEI7UUFDNUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0JBQU07WUFDekIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ3hDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLDRCQUFZLEdBQW5CLFVBQW9CLG1CQUE2QjtRQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFDLE1BQU0sRUFBRSxpQkFBaUI7WUFDN0MsTUFBTSxDQUFDLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7UUFDN0QsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sNkJBQWEsR0FBcEIsVUFBcUIsWUFBb0I7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0JBQU0sSUFBSSxhQUFNLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxFQUFsQyxDQUFrQyxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUVEOztPQUVHO0lBQ0ksNENBQTRCLEdBQW5DLFVBQW9DLGtCQUEwQjtRQUM1RCxJQUFNLFNBQVMsR0FBYSxFQUFFLENBQUM7UUFFL0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGtCQUFrQixFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3BEO1FBRUQsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSx5Q0FBeUIsR0FBaEMsVUFBaUMsZ0JBQXdCO1FBQ3ZELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBQyxLQUFLLEVBQUUsTUFBTTtZQUN2QyxPQUFPLEtBQUssR0FBRyxNQUFNLENBQUMsdUJBQXVCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNsRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDUixDQUFDO0lBRUQsc0JBQVcsMEJBQU87YUFBbEI7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFNLElBQUksYUFBTSxDQUFDLE1BQU0sRUFBYixDQUFhLENBQUMsQ0FBQztRQUNuRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLHVCQUFJO2FBQWY7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzdCLENBQUM7OztPQUFBO0lBRU0sbUNBQW1CLEdBQTFCO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0JBQU0sSUFBSSxhQUFNLENBQUMsbUJBQW1CLEVBQUUsRUFBNUIsQ0FBNEIsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFDSCxZQUFDO0FBQUQsQ0FBQztBQS9EVSxzQkFBSyIsImZpbGUiOiIuL3NyYy9MYXllci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOZXVyb24sIE5ldXJvbiB9IGZyb20gXCIuL05ldXJvblwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJTGF5ZXIge1xyXG4gICAgb3V0cHV0czogbnVtYmVyW107XHJcbiAgICBzaXplOiBudW1iZXI7XHJcbiAgXHJcbiAgICBhY3RpdmF0ZShpbnB1dHM6IG51bWJlcltdKTogdm9pZDtcclxuICAgIHVwZGF0ZURlbHRhcyhncmFkaWVudHNGb3JOZXVyb25zOiBudW1iZXJbXSk6IHZvaWQ7XHJcbiAgICB1cGRhdGVXZWlnaHRzKGxlYXJuaW5nUmF0ZTogbnVtYmVyKTogdm9pZDtcclxuICAgIGdldEdyYWRpZW50Rm9ySW5wdXROZXVyb24oaW5wdXROZXVyb25JbmRleDogbnVtYmVyKSA6IG51bWJlcjtcclxuICAgIGdldEdyYWRpZW50c0ZvclByZXZpb3VzTGF5ZXIoaW5wdXROZXVyb25zTnVtYmVyOiBudW1iZXIpIDogbnVtYmVyW107XHJcbiAgICByZWluaXRpYWxpemVXZWlnaHRzKCk6IHZvaWQ7XHJcbiAgfVxyXG5cclxuLyoqXHJcbiAqINCh0LvQvtC5INC/0YDQuCDQv9GA0Y/QvNC+0Lwg0Lgg0L7QsdGA0LDRgtC90L7QvCDRgNCw0YHQv9GA0L7RgdGC0YDQsNC90LXQvdC40Lgg0L/RgNC40L3QuNC80LDQtdGCINCy0YHQtSDQt9C90LDRh9C10L3QuNGPIFxyXG4gKiDRgdC+0YHQtdC00L3QtdCz0L4g0YHQu9C+0Y8g0Lgg0LrQsNC20LTRi9C5INC90LXQudGA0L7QvSDQstGL0LHQuNGA0LDQtdGCINC90YPQttC90YvQtSDQt9C90LDRh9C10L3QuNGPINC00LvRjyDRgdC10LHRjy5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgTGF5ZXIgaW1wbGVtZW50cyBJTGF5ZXIge1xyXG4gICAgcHJvdGVjdGVkIG5ldXJvbnM6IElOZXVyb25bXSA9IFtdO1xyXG4gIFxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgIG5ldXJvbnNOdW1iZXI6IG51bWJlcixcclxuICAgICAgZWFjaE5ldXJvbklucHV0c051bWJlcjogbnVtYmVyXHJcbiAgICApIHsgICAgICAgIFxyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5ldXJvbnNOdW1iZXI7IGkrKykge1xyXG4gICAgICAgIHRoaXMubmV1cm9uc1tpXSA9IG5ldyBOZXVyb24oZWFjaE5ldXJvbklucHV0c051bWJlcik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICBcclxuICAgIHB1YmxpYyBhY3RpdmF0ZShwcmV2aW91c0xheWVyT3V0cHV0czogbnVtYmVyW10pOiB2b2lkIHtcclxuICAgICAgdGhpcy5uZXVyb25zLmZvckVhY2gobmV1cm9uID0+IHtcclxuICAgICAgICBuZXVyb24uYWN0aXZhdGUocHJldmlvdXNMYXllck91dHB1dHMpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlRGVsdGFzKGdyYWRpZW50c0Zvck5ldXJvbnM6IG51bWJlcltdKSA6IHZvaWQge1xyXG4gICAgICB0aGlzLm5ldXJvbnMuZm9yRWFjaCgobmV1cm9uLCBuZXVyb25PdXRwdXRJbmRleCkgPT4ge1xyXG4gICAgICAgIG5ldXJvbi51cGRhdGVEZWx0YShncmFkaWVudHNGb3JOZXVyb25zW25ldXJvbk91dHB1dEluZGV4XSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGVXZWlnaHRzKGxlYXJuaW5nUmF0ZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgIHRoaXMubmV1cm9ucy5mb3JFYWNoKG5ldXJvbiA9PiBuZXVyb24udXBkYXRlV2VpZ2h0cyhsZWFybmluZ1JhdGUpKTtcclxuICAgIH1cclxuICAgXHJcbiAgICAvKipcclxuICAgICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINCz0YDQsNC00LjQtdC90YLRiyDQtNC70Y8g0L3QtdC50YDQvtC90L7Qsiwg0LLQu9C40Y/RjtGJ0LjRhSDQvdCwINC00LDQvdC90YvQuSDRgdC70L7QuSDQsiDQstC40LTQtSDQvNCw0YHRgdC40LLQsC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldEdyYWRpZW50c0ZvclByZXZpb3VzTGF5ZXIoaW5wdXROZXVyb25zTnVtYmVyOiBudW1iZXIpOiBudW1iZXJbXSB7ICAgIFxyXG4gICAgICBjb25zdCBncmFkaWVudHM6IG51bWJlcltdID0gW107XHJcblxyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0TmV1cm9uc051bWJlcjsgaSsrKSB7XHJcbiAgICAgICAgICBncmFkaWVudHMucHVzaCh0aGlzLmdldEdyYWRpZW50Rm9ySW5wdXROZXVyb24oaSkpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBncmFkaWVudHM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDQn9GA0LXQtNC/0L7Qu9Cw0LPQsNC10YLRgdGPLCDRh9GC0L4g0YMg0LrQsNC20LTQvtCz0L4g0L3QtdC50YDQvtC90LAg0L/QvtGA0Y/QtNC+0Log0LLQtdGB0L7QsiDRgdC+0L7RgtCy0LXRgtGB0YLQstGD0LXRgiDQv9C+0YDRj9C00LrRgyDQvdC10LnRgNC+0L3QvtCyINCyINC/0YDQtdC00YvQtNGD0YnQtdC8INGB0LvQvtC1LlxyXG4gICAgICog0JIg0L/QtdGA0YHQv9C10LrRgtC40LLQtSwg0LIg0L3QtdC/0L7Qu9C90L7RgdCy0Y/Qt9C90L7QuSDQvNC+0LTQtdC70LgsINC60LDQttC00YvQuSDQvdC10LnRgNC+0L0g0LHRg9C00LXRgiDQuNC80LXRgtGMIFxyXG4gICAgICog0YLQsNCx0LvQuNGG0YMg0LjQvdC00LXQutGB0L7QsiDQstGF0L7QtNGP0YnQuNGFINCyINC90LXQs9C+INC90LXQudGA0L7QvdC+0LIuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXRHcmFkaWVudEZvcklucHV0TmV1cm9uKGlucHV0TmV1cm9uSW5kZXg6IG51bWJlcikgOiBudW1iZXIge1xyXG4gICAgICByZXR1cm4gdGhpcy5uZXVyb25zLnJlZHVjZSgoYWNjdW0sIG5ldXJvbik6IG51bWJlciA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGFjY3VtICsgbmV1cm9uLmdldEdyYWRpZW50QnlJbnB1dEluZGV4KGlucHV0TmV1cm9uSW5kZXgpO1xyXG4gICAgICB9LCAwKTtcclxuICAgIH1cclxuICBcclxuICAgIHB1YmxpYyBnZXQgb3V0cHV0cygpOiBudW1iZXJbXSB7XHJcbiAgICAgIHJldHVybiB0aGlzLm5ldXJvbnMubWFwKG5ldXJvbiA9PiBuZXVyb24ub3V0cHV0KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IHNpemUoKTogbnVtYmVyIHtcclxuICAgICAgcmV0dXJuIHRoaXMubmV1cm9ucy5sZW5ndGg7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlaW5pdGlhbGl6ZVdlaWdodHMoKSA6IHZvaWQge1xyXG4gICAgICB0aGlzLm5ldXJvbnMuZm9yRWFjaChuZXVyb24gPT4gbmV1cm9uLnJlaW5pdGlhbGl6ZVdlaWdodHMoKSk7XHJcbiAgICB9XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Layer.ts\n");

/***/ }),

/***/ "./src/Network.ts":
/*!************************!*\
  !*** ./src/Network.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = __webpack_require__(/*! ./Layer */ \"./src/Layer.ts\");\r\nvar Network = /** @class */ (function () {\r\n    function Network(layersSizes) {\r\n        this.layers = [];\r\n        if (layersSizes.length < 3) {\r\n            throw new Error(\"Количество слоев сети не может быть меньше 3-х\");\r\n        }\r\n        this.inputsNumber = layersSizes[0];\r\n        /**\r\n         * Фактически первый слой не является слоем.\r\n         */\r\n        for (var i = 1; i < layersSizes.length; i++) {\r\n            var previousLayerSize = layersSizes[i - 1];\r\n            var currentLayerSize = layersSizes[i];\r\n            this.layers.push(new Layer_1.Layer(currentLayerSize, previousLayerSize));\r\n        }\r\n    }\r\n    Network.prototype.activate = function (networkInputs) {\r\n        if (networkInputs.length !== this.inputsNumber) {\r\n            throw new Error(\"Количество входов в сеть не соответствует входным данным\");\r\n        }\r\n        this.layers[0].activate(networkInputs);\r\n        for (var i = 1; i < this.layers.length; i++) {\r\n            var previousLayerOutputs = this.layers[i - 1].outputs;\r\n            this.layers[i].activate(previousLayerOutputs);\r\n        }\r\n    };\r\n    Network.prototype.train = function (dataSets, learningRate, epochsNumber) {\r\n        var _this = this;\r\n        for (var i = 0; i < epochsNumber; i++) {\r\n            dataSets.forEach(function (dataSet) {\r\n                _this.activate(dataSet.inputs);\r\n                _this.propogate(dataSet.outputs, learningRate);\r\n            });\r\n        }\r\n    };\r\n    Network.prototype.reinitializeWeights = function () {\r\n        this.layers.forEach(function (layer) {\r\n            layer.reinitializeWeights();\r\n        });\r\n    };\r\n    Network.prototype.getLayer = function (index) {\r\n        return this.layers[index];\r\n    };\r\n    Object.defineProperty(Network.prototype, \"outputs\", {\r\n        get: function () {\r\n            return this.outputLayer.outputs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Network.prototype.propogate = function (targetValues, learningRate) {\r\n        var _this = this;\r\n        if (this.outputLayer.size !== targetValues.length) {\r\n            throw new Error(\"Количество выходов из сети не соответствует обучающим данным\");\r\n        }\r\n        var errors = targetValues.map(function (targetValue, index) { return _this.outputs[index] - targetValue; });\r\n        this.outputLayer.updateDeltas(errors);\r\n        for (var i = this.layers.length - 2; i >= 0; i--) {\r\n            var currentLayer = this.layers[i];\r\n            var nextLayer = this.layers[i + 1];\r\n            var gradientsForNeurons = nextLayer.getGradientsForPreviousLayer(currentLayer.size);\r\n            currentLayer.updateDeltas(gradientsForNeurons);\r\n        }\r\n        this.layers.forEach(function (layer) {\r\n            layer.updateWeights(learningRate);\r\n        });\r\n    };\r\n    Object.defineProperty(Network.prototype, \"outputLayer\", {\r\n        get: function () {\r\n            return this.layers[this.layers.length - 1];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Network;\r\n}());\r\nexports.Network = Network;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvTmV0d29yay50cz8zOGI4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUVBQXdDO0FBY3hDO0lBSUUsaUJBQVksV0FBcUI7UUFIekIsV0FBTSxHQUFhLEVBQUUsQ0FBQztRQUk1QixJQUFJLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzFCLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0RBQWdELENBQUMsQ0FBQztTQUNuRTtRQUVELElBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRW5DOztXQUVHO1FBQ0gsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0MsSUFBTSxpQkFBaUIsR0FBRyxXQUFXLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzdDLElBQU0sZ0JBQWdCLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRXhDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksYUFBSyxDQUFDLGdCQUFnQixFQUFFLGlCQUFpQixDQUFDLENBQUMsQ0FBQztTQUNsRTtJQUNILENBQUM7SUFFTSwwQkFBUSxHQUFmLFVBQWdCLGFBQXVCO1FBQ3JDLElBQUksYUFBYSxDQUFDLE1BQU0sS0FBSyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQzlDLE1BQU0sSUFBSSxLQUFLLENBQUMsMERBQTBELENBQUMsQ0FBQztTQUM3RTtRQUVELElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRXZDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMzQyxJQUFNLG9CQUFvQixHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztZQUV4RCxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1NBQy9DO0lBQ0gsQ0FBQztJQUVNLHVCQUFLLEdBQVosVUFBYSxRQUFvQixFQUFFLFlBQW9CLEVBQUUsWUFBb0I7UUFBN0UsaUJBT0M7UUFOQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsWUFBWSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JDLFFBQVEsQ0FBQyxPQUFPLENBQUMsaUJBQU87Z0JBQ3RCLEtBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM5QixLQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7WUFDaEQsQ0FBQyxDQUFDLENBQUM7U0FDSjtJQUNILENBQUM7SUFFTSxxQ0FBbUIsR0FBMUI7UUFDRSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxlQUFLO1lBQ3ZCLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQzlCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLDBCQUFRLEdBQWYsVUFBZ0IsS0FBYTtRQUMzQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVELHNCQUFXLDRCQUFPO2FBQWxCO1lBQ0UsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTtJQUVPLDJCQUFTLEdBQWpCLFVBQWtCLFlBQXNCLEVBQUUsWUFBb0I7UUFBOUQsaUJBb0JDO1FBbkJDLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEtBQUssWUFBWSxDQUFDLE1BQU0sRUFBRTtZQUNqRCxNQUFNLElBQUksS0FBSyxDQUFDLDhEQUE4RCxDQUFDLENBQUM7U0FDakY7UUFFRCxJQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsR0FBRyxDQUFDLFVBQUMsV0FBVyxFQUFFLEtBQUssSUFBSyxZQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLFdBQVcsRUFBakMsQ0FBaUMsQ0FBQyxDQUFDO1FBQzNGLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXRDLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDaEQsSUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQyxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUVyQyxJQUFNLG1CQUFtQixHQUFhLFNBQVMsQ0FBQyw0QkFBNEIsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7WUFFaEcsWUFBWSxDQUFDLFlBQVksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1NBQ2hEO1FBRUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsZUFBSztZQUN2QixLQUFLLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELHNCQUFZLGdDQUFXO2FBQXZCO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzdDLENBQUM7OztPQUFBO0lBQ0gsY0FBQztBQUFELENBQUM7QUFwRlksMEJBQU8iLCJmaWxlIjoiLi9zcmMvTmV0d29yay50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElMYXllciwgTGF5ZXIgfSBmcm9tIFwiLi9MYXllclwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJTmV0d29yayB7XHJcbiAgb3V0cHV0czogbnVtYmVyW107XHJcbiAgYWN0aXZhdGUoaW5wdXRzOiBudW1iZXJbXSk6IHZvaWQ7XHJcbiAgdHJhaW4oZGF0YVNldHM6IElEYXRhU2V0W10sIGxlYXJuaW5nUmF0ZTogbnVtYmVyLCBlcG9jaHNOdW1iZXI6IG51bWJlcik6IHZvaWQ7XHJcbiAgcmVpbml0aWFsaXplV2VpZ2h0cygpOiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElEYXRhU2V0IHtcclxuICAgIGlucHV0czogbnVtYmVyW107XHJcbiAgICBvdXRwdXRzOiBudW1iZXJbXTsgICBcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIE5ldHdvcmsgaW1wbGVtZW50cyBJTmV0d29yayB7XHJcbiAgcHJpdmF0ZSBsYXllcnM6IElMYXllcltdID0gW107XHJcbiAgcHJpdmF0ZSBpbnB1dHNOdW1iZXI6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IobGF5ZXJzU2l6ZXM6IG51bWJlcltdKSB7IFxyXG4gICAgaWYgKGxheWVyc1NpemVzLmxlbmd0aCA8IDMpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0JrQvtC70LjRh9C10YHRgtCy0L4g0YHQu9C+0LXQsiDRgdC10YLQuCDQvdC1INC80L7QttC10YIg0LHRi9GC0Ywg0LzQtdC90YzRiNC1IDMt0YVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5pbnB1dHNOdW1iZXIgPSBsYXllcnNTaXplc1swXTsgICAgXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDQpNCw0LrRgtC40YfQtdGB0LrQuCDQv9C10YDQstGL0Lkg0YHQu9C+0Lkg0L3QtSDRj9Cy0LvRj9C10YLRgdGPINGB0LvQvtC10LwuXHJcbiAgICAgKi9cclxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgbGF5ZXJzU2l6ZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgY29uc3QgcHJldmlvdXNMYXllclNpemUgPSBsYXllcnNTaXplc1tpIC0gMV07XHJcbiAgICAgIGNvbnN0IGN1cnJlbnRMYXllclNpemUgPSBsYXllcnNTaXplc1tpXTtcclxuXHJcbiAgICAgIHRoaXMubGF5ZXJzLnB1c2gobmV3IExheWVyKGN1cnJlbnRMYXllclNpemUsIHByZXZpb3VzTGF5ZXJTaXplKSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWN0aXZhdGUobmV0d29ya0lucHV0czogbnVtYmVyW10pIHtcclxuICAgIGlmIChuZXR3b3JrSW5wdXRzLmxlbmd0aCAhPT0gdGhpcy5pbnB1dHNOdW1iZXIpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0JrQvtC70LjRh9C10YHRgtCy0L4g0LLRhdC+0LTQvtCyINCyINGB0LXRgtGMINC90LUg0YHQvtC+0YLQstC10YLRgdGC0LLRg9C10YIg0LLRhdC+0LTQvdGL0Lwg0LTQsNC90L3Ri9C8XCIpO1xyXG4gICAgfSAgICBcclxuXHJcbiAgICB0aGlzLmxheWVyc1swXS5hY3RpdmF0ZShuZXR3b3JrSW5wdXRzKTsgICAgXHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCB0aGlzLmxheWVycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBjb25zdCBwcmV2aW91c0xheWVyT3V0cHV0cyA9IHRoaXMubGF5ZXJzW2kgLSAxXS5vdXRwdXRzO1xyXG5cclxuICAgICAgdGhpcy5sYXllcnNbaV0uYWN0aXZhdGUocHJldmlvdXNMYXllck91dHB1dHMpO1xyXG4gICAgfVxyXG4gIH0gIFxyXG5cclxuICBwdWJsaWMgdHJhaW4oZGF0YVNldHM6IElEYXRhU2V0W10sIGxlYXJuaW5nUmF0ZTogbnVtYmVyLCBlcG9jaHNOdW1iZXI6IG51bWJlcik6IHZvaWQge1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlcG9jaHNOdW1iZXI7IGkrKykge1xyXG4gICAgICBkYXRhU2V0cy5mb3JFYWNoKGRhdGFTZXQgPT4ge1xyXG4gICAgICAgIHRoaXMuYWN0aXZhdGUoZGF0YVNldC5pbnB1dHMpO1xyXG4gICAgICAgIHRoaXMucHJvcG9nYXRlKGRhdGFTZXQub3V0cHV0cywgbGVhcm5pbmdSYXRlKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcmVpbml0aWFsaXplV2VpZ2h0cygpOiB2b2lkIHtcclxuICAgIHRoaXMubGF5ZXJzLmZvckVhY2gobGF5ZXIgPT4ge1xyXG4gICAgICBsYXllci5yZWluaXRpYWxpemVXZWlnaHRzKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRMYXllcihpbmRleDogbnVtYmVyKSA6IElMYXllciB7XHJcbiAgICByZXR1cm4gdGhpcy5sYXllcnNbaW5kZXhdO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCBvdXRwdXRzKCk6IG51bWJlcltdIHtcclxuICAgIHJldHVybiB0aGlzLm91dHB1dExheWVyLm91dHB1dHM7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHByb3BvZ2F0ZSh0YXJnZXRWYWx1ZXM6IG51bWJlcltdLCBsZWFybmluZ1JhdGU6IG51bWJlcikgeyAgICBcclxuICAgIGlmICh0aGlzLm91dHB1dExheWVyLnNpemUgIT09IHRhcmdldFZhbHVlcy5sZW5ndGgpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0JrQvtC70LjRh9C10YHRgtCy0L4g0LLRi9GF0L7QtNC+0LIg0LjQtyDRgdC10YLQuCDQvdC1INGB0L7QvtGC0LLQtdGC0YHRgtCy0YPQtdGCINC+0LHRg9GH0LDRjtGJ0LjQvCDQtNCw0L3QvdGL0LxcIik7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZXJyb3JzID0gdGFyZ2V0VmFsdWVzLm1hcCgodGFyZ2V0VmFsdWUsIGluZGV4KSA9PiB0aGlzLm91dHB1dHNbaW5kZXhdIC0gdGFyZ2V0VmFsdWUpO1xyXG4gICAgdGhpcy5vdXRwdXRMYXllci51cGRhdGVEZWx0YXMoZXJyb3JzKTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gdGhpcy5sYXllcnMubGVuZ3RoIC0gMjsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgY29uc3QgY3VycmVudExheWVyID0gdGhpcy5sYXllcnNbaV07XHJcbiAgICAgIGNvbnN0IG5leHRMYXllciA9IHRoaXMubGF5ZXJzW2kgKyAxXTtcclxuXHJcbiAgICAgIGNvbnN0IGdyYWRpZW50c0Zvck5ldXJvbnM6IG51bWJlcltdID0gbmV4dExheWVyLmdldEdyYWRpZW50c0ZvclByZXZpb3VzTGF5ZXIoY3VycmVudExheWVyLnNpemUpOyAgXHJcbiAgICAgXHJcbiAgICAgIGN1cnJlbnRMYXllci51cGRhdGVEZWx0YXMoZ3JhZGllbnRzRm9yTmV1cm9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5sYXllcnMuZm9yRWFjaChsYXllciA9PiB7XHJcbiAgICAgIGxheWVyLnVwZGF0ZVdlaWdodHMobGVhcm5pbmdSYXRlKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXQgb3V0cHV0TGF5ZXIoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5sYXllcnNbdGhpcy5sYXllcnMubGVuZ3RoIC0gMV07XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Network.ts\n");

/***/ }),

/***/ "./src/Neuron.ts":
/*!***********************!*\
  !*** ./src/Neuron.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar squash = {\r\n    SIGMOID: function (x, isDerivate) {\r\n        var fx = 1 / (1 + Math.exp(-x));\r\n        return isDerivate ? fx * (1 - fx) : fx;\r\n    },\r\n    RELU: function (x, isDerivate) {\r\n        return isDerivate ?\r\n            (x > 0 ? 1 : 0) :\r\n            (x > 0 ? x : 0);\r\n    }\r\n};\r\nfunction randomDouble(min, max) {\r\n    return min + (max - min) * Math.random();\r\n}\r\nvar Neuron = /** @class */ (function () {\r\n    function Neuron(inputsNumber) {\r\n        this.output = 0;\r\n        this.savedInputs = [];\r\n        this.weights = [];\r\n        this.biasWeight = 0;\r\n        this.sum = 0;\r\n        this.delta = 0;\r\n        this.initializeWeights(inputsNumber);\r\n    }\r\n    Neuron.prototype.activate = function (inputs) {\r\n        this.savedInputs = inputs;\r\n        this.summarize(inputs);\r\n        this.output = squash.SIGMOID(this.sum);\r\n    };\r\n    Neuron.prototype.updateDelta = function (gradient) {\r\n        this.delta = squash.SIGMOID(this.sum, true) * gradient;\r\n    };\r\n    Neuron.prototype.updateWeights = function (learningRate) {\r\n        var _this = this;\r\n        this.weights = this.weights.map(function (weight, index) {\r\n            return weight - learningRate * _this.delta * _this.savedInputs[index];\r\n        });\r\n        this.biasWeight -= learningRate * this.delta;\r\n    };\r\n    Neuron.prototype.getGradientByInputIndex = function (index) {\r\n        if (index >= this.weights.length) {\r\n            throw new Error(\"Попытка обратиться к несуществующей связи\");\r\n        }\r\n        return this.delta * this.weights[index];\r\n    };\r\n    Neuron.prototype.reinitializeWeights = function () {\r\n        this.initializeWeights(this.weights.length);\r\n    };\r\n    Neuron.prototype.summarize = function (inputs) {\r\n        var _this = this;\r\n        if (this.weights.length !== inputs.length) {\r\n            throw new Error(\"Число входов в нейрон не соответствует количеству его весов\");\r\n        }\r\n        this.sum = inputs.reduce(function (accum, input, index) {\r\n            return accum + input * _this.weights[index];\r\n        }, this.biasWeight);\r\n    };\r\n    Neuron.prototype.initializeWeights = function (weightsNumber) {\r\n        this.weights = [];\r\n        for (var i = 0; i < weightsNumber; i++) {\r\n            this.weights[i] = this.randomNumber;\r\n        }\r\n        this.biasWeight = this.randomNumber;\r\n    };\r\n    Object.defineProperty(Neuron.prototype, \"randomNumber\", {\r\n        get: function () {\r\n            return randomDouble(-1, 1);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Neuron;\r\n}());\r\nexports.Neuron = Neuron;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvTmV1cm9uLnRzPzA4ZTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFVQyxJQUFNLE1BQU0sR0FBRztJQUNaLE9BQU8sRUFBUCxVQUFRLENBQVMsRUFBRSxVQUFvQjtRQUNyQyxJQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEMsT0FBTyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3pDLENBQUM7SUFDRCxJQUFJLEVBQUosVUFBSyxDQUFTLEVBQUUsVUFBb0I7UUFDbEMsT0FBTyxVQUFVLENBQUMsQ0FBQztZQUNsQixDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqQixDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkIsQ0FBQztDQUNGLENBQUM7QUFFRixTQUFTLFlBQVksQ0FBQyxHQUFXLEVBQUUsR0FBVztJQUM1QyxPQUFPLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDM0MsQ0FBQztBQUVEO0lBV0UsZ0JBQVksWUFBb0I7UUFWekIsV0FBTSxHQUFXLENBQUMsQ0FBQztRQUVsQixnQkFBVyxHQUFhLEVBQUUsQ0FBQztRQUUzQixZQUFPLEdBQWEsRUFBRSxDQUFDO1FBQ3ZCLGVBQVUsR0FBVyxDQUFDLENBQUM7UUFDdkIsUUFBRyxHQUFXLENBQUMsQ0FBQztRQUVoQixVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBR3hCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRU0seUJBQVEsR0FBZixVQUFnQixNQUFnQjtRQUM5QixJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztRQUUxQixJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVNLDRCQUFXLEdBQWxCLFVBQW1CLFFBQWdCO1FBQ2pDLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQztJQUN6RCxDQUFDO0lBRU0sOEJBQWEsR0FBcEIsVUFBcUIsWUFBb0I7UUFBekMsaUJBTUM7UUFMQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQUMsTUFBTSxFQUFFLEtBQUs7WUFDNUMsT0FBTyxNQUFNLEdBQUcsWUFBWSxHQUFHLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0RSxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxVQUFVLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDL0MsQ0FBQztJQUVNLHdDQUF1QixHQUE5QixVQUErQixLQUFhO1FBQzFDLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFO1lBQ2hDLE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLENBQUMsQ0FBQztTQUM5RDtRQUVELE9BQU8sSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFTSxvQ0FBbUIsR0FBMUI7UUFDRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRU8sMEJBQVMsR0FBakIsVUFBa0IsTUFBZ0I7UUFBbEMsaUJBVUM7UUFUQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQyxNQUFNLEVBQUU7WUFDekMsTUFBTSxJQUFJLEtBQUssQ0FDYiw2REFBNkQsQ0FDOUQsQ0FBQztTQUNIO1FBRUQsSUFBSSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLO1lBQzNDLE9BQU8sS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdDLENBQUMsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3JCLENBQUM7SUFFTyxrQ0FBaUIsR0FBekIsVUFBMEIsYUFBcUI7UUFDN0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFFbEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGFBQWEsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN0QyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7U0FDckM7UUFFRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDdEMsQ0FBQztJQUVELHNCQUFZLGdDQUFZO2FBQXhCO1lBQ0UsT0FBTyxZQUFZLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDN0IsQ0FBQzs7O09BQUE7SUFDSCxhQUFDO0FBQUQsQ0FBQztBQXZFWSx3QkFBTSIsImZpbGUiOiIuL3NyYy9OZXVyb24udHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIElOZXVyb24ge1xyXG4gICAgb3V0cHV0OiBudW1iZXI7XHJcbiAgXHJcbiAgICBhY3RpdmF0ZShpbnB1dHM6IG51bWJlcltdKTogdm9pZDtcclxuICAgIHVwZGF0ZURlbHRhKGdyYWRpZW50OiBudW1iZXIpOiB2b2lkO1xyXG4gICAgdXBkYXRlV2VpZ2h0cyhsZWFybmluZ1JhdGU6IG51bWJlcik6IHZvaWQ7XHJcbiAgICBnZXRHcmFkaWVudEJ5SW5wdXRJbmRleChpbmRleDogbnVtYmVyKSA6IG51bWJlcjtcclxuICAgIHJlaW5pdGlhbGl6ZVdlaWdodHMoKTogdm9pZDtcclxuICB9XHJcblxyXG4gY29uc3Qgc3F1YXNoID0ge1xyXG4gICAgU0lHTU9JRCh4OiBudW1iZXIsIGlzRGVyaXZhdGU/OiBib29sZWFuKTogbnVtYmVyIHtcclxuICAgICAgY29uc3QgZnggPSAxIC8gKDEgKyBNYXRoLmV4cCgteCkpO1xyXG4gICAgICByZXR1cm4gaXNEZXJpdmF0ZSA/IGZ4ICogKDEgLSBmeCkgOiBmeDtcclxuICAgIH0sXHJcbiAgICBSRUxVKHg6IG51bWJlciwgaXNEZXJpdmF0ZT86IGJvb2xlYW4pIDogbnVtYmVyIHtcclxuICAgICAgcmV0dXJuIGlzRGVyaXZhdGUgP1xyXG4gICAgICAgKHggPiAwID8gMSA6IDApIDpcclxuICAgICAgICh4ID4gMCA/IHggOiAwKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBmdW5jdGlvbiByYW5kb21Eb3VibGUobWluOiBudW1iZXIsIG1heDogbnVtYmVyKSA6IG51bWJlciB7XHJcbiAgICByZXR1cm4gbWluICsgKG1heCAtIG1pbikgKiBNYXRoLnJhbmRvbSgpO1xyXG4gIH1cclxuICBcclxuICBleHBvcnQgY2xhc3MgTmV1cm9uIGltcGxlbWVudHMgSU5ldXJvbiB7XHJcbiAgICBwdWJsaWMgb3V0cHV0OiBudW1iZXIgPSAwO1xyXG5cclxuICAgIHByaXZhdGUgc2F2ZWRJbnB1dHM6IG51bWJlcltdID0gW107XHJcblxyXG4gICAgcHJpdmF0ZSB3ZWlnaHRzOiBudW1iZXJbXSA9IFtdO1xyXG4gICAgcHJpdmF0ZSBiaWFzV2VpZ2h0OiBudW1iZXIgPSAwO1xyXG4gICAgcHJpdmF0ZSBzdW06IG51bWJlciA9IDA7XHJcblxyXG4gICAgcHJpdmF0ZSBkZWx0YTogbnVtYmVyID0gMDtcclxuICBcclxuICAgIGNvbnN0cnVjdG9yKGlucHV0c051bWJlcjogbnVtYmVyKSB7XHJcbiAgICAgIHRoaXMuaW5pdGlhbGl6ZVdlaWdodHMoaW5wdXRzTnVtYmVyKTtcclxuICAgIH1cclxuICBcclxuICAgIHB1YmxpYyBhY3RpdmF0ZShpbnB1dHM6IG51bWJlcltdKTogdm9pZCB7XHJcbiAgICAgIHRoaXMuc2F2ZWRJbnB1dHMgPSBpbnB1dHM7XHJcblxyXG4gICAgICB0aGlzLnN1bW1hcml6ZShpbnB1dHMpO1xyXG4gICAgICB0aGlzLm91dHB1dCA9IHNxdWFzaC5TSUdNT0lEKHRoaXMuc3VtKTtcclxuICAgIH0gICBcclxuICAgIFxyXG4gICAgcHVibGljIHVwZGF0ZURlbHRhKGdyYWRpZW50OiBudW1iZXIpIDogdm9pZCB7XHJcbiAgICAgIHRoaXMuZGVsdGEgPSBzcXVhc2guU0lHTU9JRCh0aGlzLnN1bSwgdHJ1ZSkgKiBncmFkaWVudDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlV2VpZ2h0cyhsZWFybmluZ1JhdGU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICB0aGlzLndlaWdodHMgPSB0aGlzLndlaWdodHMubWFwKCh3ZWlnaHQsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHdlaWdodCAtIGxlYXJuaW5nUmF0ZSAqIHRoaXMuZGVsdGEgKiB0aGlzLnNhdmVkSW5wdXRzW2luZGV4XTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0aGlzLmJpYXNXZWlnaHQgLT0gbGVhcm5pbmdSYXRlICogdGhpcy5kZWx0YTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0R3JhZGllbnRCeUlucHV0SW5kZXgoaW5kZXg6IG51bWJlcikgOiBudW1iZXIge1xyXG4gICAgICBpZiAoaW5kZXggPj0gdGhpcy53ZWlnaHRzLmxlbmd0aCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcItCf0L7Qv9GL0YLQutCwINC+0LHRgNCw0YLQuNGC0YzRgdGPINC6INC90LXRgdGD0YnQtdGB0YLQstGD0Y7RidC10Lkg0YHQstGP0LfQuFwiKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIHRoaXMuZGVsdGEgKiB0aGlzLndlaWdodHNbaW5kZXhdO1xyXG4gICAgfSAgXHJcblxyXG4gICAgcHVibGljIHJlaW5pdGlhbGl6ZVdlaWdodHMoKSA6IHZvaWQge1xyXG4gICAgICB0aGlzLmluaXRpYWxpemVXZWlnaHRzKHRoaXMud2VpZ2h0cy5sZW5ndGgpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgcHJpdmF0ZSBzdW1tYXJpemUoaW5wdXRzOiBudW1iZXJbXSk6IHZvaWQge1xyXG4gICAgICBpZiAodGhpcy53ZWlnaHRzLmxlbmd0aCAhPT0gaW5wdXRzLmxlbmd0aCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICAgIFwi0KfQuNGB0LvQviDQstGF0L7QtNC+0LIg0LIg0L3QtdC50YDQvtC9INC90LUg0YHQvtC+0YLQstC10YLRgdGC0LLRg9C10YIg0LrQvtC70LjRh9C10YHRgtCy0YMg0LXQs9C+INCy0LXRgdC+0LJcIlxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuc3VtID0gaW5wdXRzLnJlZHVjZSgoYWNjdW0sIGlucHV0LCBpbmRleCk6IG51bWJlciA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGFjY3VtICsgaW5wdXQgKiB0aGlzLndlaWdodHNbaW5kZXhdO1xyXG4gICAgICB9LCB0aGlzLmJpYXNXZWlnaHQpXHJcbiAgICB9XHJcbiAgXHJcbiAgICBwcml2YXRlIGluaXRpYWxpemVXZWlnaHRzKHdlaWdodHNOdW1iZXI6IG51bWJlcikgeyAgIFxyXG4gICAgICB0aGlzLndlaWdodHMgPSBbXTtcclxuXHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgd2VpZ2h0c051bWJlcjsgaSsrKSB7XHJcbiAgICAgICAgdGhpcy53ZWlnaHRzW2ldID0gdGhpcy5yYW5kb21OdW1iZXI7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuYmlhc1dlaWdodCA9IHRoaXMucmFuZG9tTnVtYmVyO1xyXG4gICAgfSAgICBcclxuXHJcbiAgICBwcml2YXRlIGdldCByYW5kb21OdW1iZXIoKSA6IG51bWJlciB7XHJcbiAgICAgIHJldHVybiByYW5kb21Eb3VibGUoLTEsIDEpO1xyXG4gICAgfVxyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Neuron.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Network_1 = __webpack_require__(/*! ./Network */ \"./src/Network.ts\");\r\nvar network = new Network_1.Network([2, 4, 1]);\r\nvar dataSets = [\r\n    { inputs: [1, 1], outputs: [0] },\r\n    { inputs: [0, 0], outputs: [0] },\r\n    { inputs: [1, 0], outputs: [1] },\r\n    { inputs: [0, 1], outputs: [1] },\r\n];\r\nvar learningRate = .7;\r\nvar epochsNumber = 5000;\r\ntest(dataSets, .05, 100);\r\nfunction test(dataSets, allowableError, iterationsNumber) {\r\n    var startTime = performance.now();\r\n    var _loop_1 = function (i) {\r\n        network.reinitializeWeights();\r\n        network.train(dataSets, learningRate, epochsNumber);\r\n        dataSets.forEach(function (dataSet) {\r\n            network.activate(dataSet.inputs);\r\n            dataSet.outputs.forEach(function (idealOutput, index) {\r\n                if (Math.abs(idealOutput - network.outputs[index]) > allowableError) {\r\n                    print(dataSets);\r\n                    throw new Error(\"\\u0412\\u043E\\u0437\\u043D\\u0438\\u043A\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430, \\u0432\\u044B\\u0448\\u0435 \\u0434\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u043C\\u043E\\u0439: \" + allowableError + \", \\u043D\\u0430 \" + i + \"-\\u0439 \\u0438\\u0442\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\");\r\n                }\r\n            });\r\n        });\r\n    };\r\n    for (var i = 0; i < iterationsNumber; i++) {\r\n        _loop_1(i);\r\n    }\r\n    var interval = Math.round(performance.now() - startTime);\r\n    print(dataSets);\r\n    console.warn(\"\\u0422\\u0435\\u0441\\u0442 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043F\\u0440\\u043E\\u0439\\u0434\\u0435\\u043D \\u0437\\u0430 \" + interval + \"ms \\u0441 \\u0434\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u043C\\u043E\\u0439 \\u043E\\u0448\\u0438\\u0431\\u043A\\u043E\\u0439 \" + allowableError);\r\n}\r\nfunction print(dataSets) {\r\n    dataSets.forEach(function (dataSet) {\r\n        network.activate(dataSet.inputs);\r\n        console.log(dataSet.inputs.toString() + \" -> \" + network.outputs.toString());\r\n    });\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHM/ZmZiNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlFQUE4QztBQUU5QyxJQUFNLE9BQU8sR0FBRyxJQUFJLGlCQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFdkMsSUFBTSxRQUFRLEdBQUc7SUFDZixFQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQztJQUM5QixFQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQztJQUM5QixFQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQztJQUM5QixFQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQztDQUMvQixDQUFDO0FBRUYsSUFBTSxZQUFZLEdBQUcsRUFBRSxDQUFDO0FBQ3hCLElBQU0sWUFBWSxHQUFHLElBQUksQ0FBQztBQUUxQixJQUFJLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUV6QixTQUFTLElBQUksQ0FBQyxRQUFvQixFQUFFLGNBQXNCLEVBQUUsZ0JBQXdCO0lBQ2xGLElBQU0sU0FBUyxHQUFHLFdBQVcsQ0FBQyxHQUFHLEVBQUUsQ0FBQzs0QkFFM0IsQ0FBQztRQUNSLE9BQU8sQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBRTlCLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLFlBQVksRUFBRSxZQUFZLENBQUMsQ0FBQztRQUVwRCxRQUFRLENBQUMsT0FBTyxDQUFDLGlCQUFPO1lBQ3RCLE9BQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBRWpDLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUMsV0FBVyxFQUFFLEtBQUs7Z0JBQ3pDLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLGNBQWMsRUFBRTtvQkFDbkUsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO29CQUNqQixNQUFNLElBQUksS0FBSyxDQUFDLG1MQUFxQyxjQUFjLHVCQUFRLENBQUMsNkRBQWEsQ0FBQyxDQUFDO2lCQUMzRjtZQUNILENBQUMsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUFDOztJQWRMLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxnQkFBZ0IsRUFBRSxDQUFDLEVBQUU7Z0JBQWhDLENBQUM7S0FlVDtJQUVELElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxHQUFHLFNBQVMsQ0FBQyxDQUFDO0lBRTNELEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoQixPQUFPLENBQUMsSUFBSSxDQUFDLGlJQUEyQixRQUFRLDBIQUEyQixjQUFnQixDQUFDLENBQUM7QUFDL0YsQ0FBQztBQUVELFNBQVMsS0FBSyxDQUFDLFFBQXFCO0lBQ2xDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQyxPQUFPO1FBQ3ZCLE9BQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pDLE9BQU8sQ0FBQyxHQUFHLENBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsWUFBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBSSxDQUFDLENBQUM7SUFDL0UsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDIiwiZmlsZSI6Ii4vc3JjL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV0d29yaywgSURhdGFTZXQgfSBmcm9tIFwiLi9OZXR3b3JrXCI7XHJcblxyXG5jb25zdCBuZXR3b3JrID0gbmV3IE5ldHdvcmsoWzIsIDQsIDFdKTtcclxuXHJcbmNvbnN0IGRhdGFTZXRzID0gW1xyXG4gIHtpbnB1dHM6IFsxLCAxXSwgb3V0cHV0czogWzBdfSxcclxuICB7aW5wdXRzOiBbMCwgMF0sIG91dHB1dHM6IFswXX0sXHJcbiAge2lucHV0czogWzEsIDBdLCBvdXRwdXRzOiBbMV19LFxyXG4gIHtpbnB1dHM6IFswLCAxXSwgb3V0cHV0czogWzFdfSxcclxuXTtcclxuXHJcbmNvbnN0IGxlYXJuaW5nUmF0ZSA9IC43O1xyXG5jb25zdCBlcG9jaHNOdW1iZXIgPSA1MDAwO1xyXG5cclxudGVzdChkYXRhU2V0cywgLjA1LCAxMDApO1xyXG5cclxuZnVuY3Rpb24gdGVzdChkYXRhU2V0czogSURhdGFTZXRbXSwgYWxsb3dhYmxlRXJyb3I6IG51bWJlciwgaXRlcmF0aW9uc051bWJlcjogbnVtYmVyKSB7XHJcbiAgY29uc3Qgc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XHJcblxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlcmF0aW9uc051bWJlcjsgaSsrKSB7XHJcbiAgICBuZXR3b3JrLnJlaW5pdGlhbGl6ZVdlaWdodHMoKTtcclxuXHJcbiAgICBuZXR3b3JrLnRyYWluKGRhdGFTZXRzLCBsZWFybmluZ1JhdGUsIGVwb2Noc051bWJlcik7XHJcblxyXG4gICAgZGF0YVNldHMuZm9yRWFjaChkYXRhU2V0ID0+IHtcclxuICAgICAgbmV0d29yay5hY3RpdmF0ZShkYXRhU2V0LmlucHV0cyk7XHJcblxyXG4gICAgICBkYXRhU2V0Lm91dHB1dHMuZm9yRWFjaCgoaWRlYWxPdXRwdXQsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgaWYgKE1hdGguYWJzKGlkZWFsT3V0cHV0IC0gbmV0d29yay5vdXRwdXRzW2luZGV4XSkgPiBhbGxvd2FibGVFcnJvcikge1xyXG4gICAgICAgICAgcHJpbnQoZGF0YVNldHMpO1xyXG4gICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYNCS0L7Qt9C90LjQutC70LAg0L7RiNC40LHQutCwLCDQstGL0YjQtSDQtNC+0L/Rg9GB0YLQuNC80L7QuTogJHthbGxvd2FibGVFcnJvcn0sINC90LAgJHtpfS3QuSDQuNGC0LXRgNCw0YbQuNC4YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjb25zdCBpbnRlcnZhbCA9IE1hdGgucm91bmQocGVyZm9ybWFuY2Uubm93KCkgLSBzdGFydFRpbWUpO1xyXG5cclxuICBwcmludChkYXRhU2V0cyk7XHJcbiAgY29uc29sZS53YXJuKGDQotC10YHRgiDRg9GB0L/QtdGI0L3QviDQv9GA0L7QudC00LXQvSDQt9CwICR7aW50ZXJ2YWx9bXMg0YEg0LTQvtC/0YPRgdGC0LjQvNC+0Lkg0L7RiNC40LHQutC+0LkgJHthbGxvd2FibGVFcnJvcn1gKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcHJpbnQoZGF0YVNldHMgOiBJRGF0YVNldFtdKSB7XHJcbiAgZGF0YVNldHMuZm9yRWFjaCgoZGF0YVNldCkgPT4ge1xyXG4gICAgbmV0d29yay5hY3RpdmF0ZShkYXRhU2V0LmlucHV0cyk7XHJcbiAgICBjb25zb2xlLmxvZyhgJHtkYXRhU2V0LmlucHV0cy50b1N0cmluZygpfSAtPiAke25ldHdvcmsub3V0cHV0cy50b1N0cmluZygpfWApO1xyXG4gIH0pO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ });