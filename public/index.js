/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Layer.ts":
/*!**********************!*\
  !*** ./src/Layer.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Neuron_1 = __webpack_require__(/*! ./Neuron */ \"./src/Neuron.ts\");\r\n/**\r\n * Слой при прямом и обратном распространении принимает все значения\r\n * соседнего слоя и каждый нейрон выбирает нужные значения для себя.\r\n */\r\nvar Layer = /** @class */ (function () {\r\n    function Layer(neuronsNumber, eachNeuronInputsNumber) {\r\n        this.neurons = [];\r\n        for (var i = 0; i < neuronsNumber; i++) {\r\n            this.neurons[i] = new Neuron_1.Neuron(eachNeuronInputsNumber);\r\n        }\r\n    }\r\n    Object.defineProperty(Layer.prototype, \"outputs\", {\r\n        get: function () {\r\n            return this.neurons.map(function (neuron) { return neuron.output; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Layer.prototype, \"size\", {\r\n        get: function () {\r\n            return this.neurons.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Layer.prototype.activate = function (previousLayerOutputs) {\r\n        this.neurons.forEach(function (neuron) {\r\n            neuron.activate(previousLayerOutputs);\r\n        });\r\n    };\r\n    Layer.prototype.updateDeltas = function (gradientsForNeurons) {\r\n        this.neurons.forEach(function (neuron, neuronOutputIndex) {\r\n            neuron.updateDelta(gradientsForNeurons[neuronOutputIndex]);\r\n        });\r\n    };\r\n    Layer.prototype.updateWeights = function (learningRate) {\r\n        this.neurons.forEach(function (neuron) { return neuron.updateWeights(learningRate); });\r\n    };\r\n    Layer.prototype.reinitializeWeights = function () {\r\n        this.neurons.forEach(function (neuron) { return neuron.reinitializeWeights(); });\r\n    };\r\n    /**\r\n     * Возвращает градиенты для нейронов, влияющих на данный слой в виде массива.\r\n     */\r\n    Layer.prototype.getGradientsForPreviousLayer = function (inputNeuronsNumber) {\r\n        var gradients = [];\r\n        for (var i = 0; i < inputNeuronsNumber; i++) {\r\n            gradients.push(this.getGradientForInputNeuron(i));\r\n        }\r\n        return gradients;\r\n    };\r\n    /**\r\n     * Предполагается, что у каждого нейрона порядок весов соответствует порядку нейронов в предыдущем слое.\r\n     * В перспективе, в неполносвязной модели, каждый нейрон будет иметь\r\n     * таблицу индексов входящих в него нейронов.\r\n     */\r\n    Layer.prototype.getGradientForInputNeuron = function (inputNeuronIndex) {\r\n        return this.neurons.reduce(function (accum, neuron) {\r\n            return accum + neuron.getGradientByInputIndex(inputNeuronIndex);\r\n        }, 0);\r\n    };\r\n    return Layer;\r\n}());\r\nexports.Layer = Layer;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvTGF5ZXIudHM/NmM4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNFQUEyQztBQWEzQzs7O0dBR0c7QUFFSDtJQUdJLGVBQ0UsYUFBcUIsRUFDckIsc0JBQThCO1FBSnhCLFlBQU8sR0FBYyxFQUFFLENBQUM7UUFNOUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGFBQWEsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN0QyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksZUFBTSxDQUFDLHNCQUFzQixDQUFDLENBQUM7U0FDdEQ7SUFDSCxDQUFDO0lBRUQsc0JBQVcsMEJBQU87YUFBbEI7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFNLElBQUksYUFBTSxDQUFDLE1BQU0sRUFBYixDQUFhLENBQUMsQ0FBQztRQUNuRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLHVCQUFJO2FBQWY7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzdCLENBQUM7OztPQUFBO0lBRU0sd0JBQVEsR0FBZixVQUFnQixvQkFBOEI7UUFDNUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0JBQU07WUFDekIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ3hDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLDRCQUFZLEdBQW5CLFVBQW9CLG1CQUE2QjtRQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFDLE1BQU0sRUFBRSxpQkFBaUI7WUFDN0MsTUFBTSxDQUFDLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7UUFDN0QsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sNkJBQWEsR0FBcEIsVUFBcUIsWUFBb0I7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0JBQU0sSUFBSSxhQUFNLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxFQUFsQyxDQUFrQyxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUVNLG1DQUFtQixHQUExQjtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLGdCQUFNLElBQUksYUFBTSxDQUFDLG1CQUFtQixFQUFFLEVBQTVCLENBQTRCLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRUQ7O09BRUc7SUFDSSw0Q0FBNEIsR0FBbkMsVUFBb0Msa0JBQTBCO1FBQzVELElBQU0sU0FBUyxHQUFhLEVBQUUsQ0FBQztRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsa0JBQWtCLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDekMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDcEQ7UUFFRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLHlDQUF5QixHQUFoQyxVQUFpQyxnQkFBd0I7UUFDdkQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFDLEtBQUssRUFBRSxNQUFNO1lBQ3ZDLE9BQU8sS0FBSyxHQUFHLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2xFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNSLENBQUM7SUFDSCxZQUFDO0FBQUQsQ0FBQztBQS9EVSxzQkFBSyIsImZpbGUiOiIuL3NyYy9MYXllci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElOZXVyb24sIE5ldXJvbiB9IGZyb20gXCIuL05ldXJvblwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJTGF5ZXIge1xyXG4gICAgb3V0cHV0czogbnVtYmVyW107XHJcbiAgICBzaXplOiBudW1iZXI7XHJcbiAgICBhY3RpdmF0ZShpbnB1dHM6IG51bWJlcltdKTogdm9pZDtcclxuICAgIHVwZGF0ZURlbHRhcyhncmFkaWVudHNGb3JOZXVyb25zOiBudW1iZXJbXSk6IHZvaWQ7XHJcbiAgICB1cGRhdGVXZWlnaHRzKGxlYXJuaW5nUmF0ZTogbnVtYmVyKTogdm9pZDtcclxuICAgIGdldEdyYWRpZW50Rm9ySW5wdXROZXVyb24oaW5wdXROZXVyb25JbmRleDogbnVtYmVyKSA6IG51bWJlcjtcclxuICAgIGdldEdyYWRpZW50c0ZvclByZXZpb3VzTGF5ZXIoaW5wdXROZXVyb25zTnVtYmVyOiBudW1iZXIpIDogbnVtYmVyW107XHJcbiAgICByZWluaXRpYWxpemVXZWlnaHRzKCk6IHZvaWQ7XHJcbiAgfVxyXG5cclxuLyoqXHJcbiAqINCh0LvQvtC5INC/0YDQuCDQv9GA0Y/QvNC+0Lwg0Lgg0L7QsdGA0LDRgtC90L7QvCDRgNCw0YHQv9GA0L7RgdGC0YDQsNC90LXQvdC40Lgg0L/RgNC40L3QuNC80LDQtdGCINCy0YHQtSDQt9C90LDRh9C10L3QuNGPIFxyXG4gKiDRgdC+0YHQtdC00L3QtdCz0L4g0YHQu9C+0Y8g0Lgg0LrQsNC20LTRi9C5INC90LXQudGA0L7QvSDQstGL0LHQuNGA0LDQtdGCINC90YPQttC90YvQtSDQt9C90LDRh9C10L3QuNGPINC00LvRjyDRgdC10LHRjy5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgTGF5ZXIgaW1wbGVtZW50cyBJTGF5ZXIge1xyXG4gICAgcHJpdmF0ZSBuZXVyb25zOiBJTmV1cm9uW10gPSBbXTtcclxuICBcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICBuZXVyb25zTnVtYmVyOiBudW1iZXIsXHJcbiAgICAgIGVhY2hOZXVyb25JbnB1dHNOdW1iZXI6IG51bWJlclxyXG4gICAgKSB7ICAgICAgICBcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuZXVyb25zTnVtYmVyOyBpKyspIHtcclxuICAgICAgICB0aGlzLm5ldXJvbnNbaV0gPSBuZXcgTmV1cm9uKGVhY2hOZXVyb25JbnB1dHNOdW1iZXIpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBvdXRwdXRzKCk6IG51bWJlcltdIHtcclxuICAgICAgcmV0dXJuIHRoaXMubmV1cm9ucy5tYXAobmV1cm9uID0+IG5ldXJvbi5vdXRwdXQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgc2l6ZSgpOiBudW1iZXIge1xyXG4gICAgICByZXR1cm4gdGhpcy5uZXVyb25zLmxlbmd0aDtcclxuICAgIH1cclxuICBcclxuICAgIHB1YmxpYyBhY3RpdmF0ZShwcmV2aW91c0xheWVyT3V0cHV0czogbnVtYmVyW10pOiB2b2lkIHtcclxuICAgICAgdGhpcy5uZXVyb25zLmZvckVhY2gobmV1cm9uID0+IHtcclxuICAgICAgICBuZXVyb24uYWN0aXZhdGUocHJldmlvdXNMYXllck91dHB1dHMpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlRGVsdGFzKGdyYWRpZW50c0Zvck5ldXJvbnM6IG51bWJlcltdKSA6IHZvaWQge1xyXG4gICAgICB0aGlzLm5ldXJvbnMuZm9yRWFjaCgobmV1cm9uLCBuZXVyb25PdXRwdXRJbmRleCkgPT4ge1xyXG4gICAgICAgIG5ldXJvbi51cGRhdGVEZWx0YShncmFkaWVudHNGb3JOZXVyb25zW25ldXJvbk91dHB1dEluZGV4XSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1cGRhdGVXZWlnaHRzKGxlYXJuaW5nUmF0ZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgIHRoaXMubmV1cm9ucy5mb3JFYWNoKG5ldXJvbiA9PiBuZXVyb24udXBkYXRlV2VpZ2h0cyhsZWFybmluZ1JhdGUpKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVpbml0aWFsaXplV2VpZ2h0cygpIDogdm9pZCB7XHJcbiAgICAgIHRoaXMubmV1cm9ucy5mb3JFYWNoKG5ldXJvbiA9PiBuZXVyb24ucmVpbml0aWFsaXplV2VpZ2h0cygpKTtcclxuICAgIH1cclxuICAgXHJcbiAgICAvKipcclxuICAgICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINCz0YDQsNC00LjQtdC90YLRiyDQtNC70Y8g0L3QtdC50YDQvtC90L7Qsiwg0LLQu9C40Y/RjtGJ0LjRhSDQvdCwINC00LDQvdC90YvQuSDRgdC70L7QuSDQsiDQstC40LTQtSDQvNCw0YHRgdC40LLQsC5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldEdyYWRpZW50c0ZvclByZXZpb3VzTGF5ZXIoaW5wdXROZXVyb25zTnVtYmVyOiBudW1iZXIpOiBudW1iZXJbXSB7ICAgIFxyXG4gICAgICBjb25zdCBncmFkaWVudHM6IG51bWJlcltdID0gW107XHJcblxyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0TmV1cm9uc051bWJlcjsgaSsrKSB7XHJcbiAgICAgICAgICBncmFkaWVudHMucHVzaCh0aGlzLmdldEdyYWRpZW50Rm9ySW5wdXROZXVyb24oaSkpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBncmFkaWVudHM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDQn9GA0LXQtNC/0L7Qu9Cw0LPQsNC10YLRgdGPLCDRh9GC0L4g0YMg0LrQsNC20LTQvtCz0L4g0L3QtdC50YDQvtC90LAg0L/QvtGA0Y/QtNC+0Log0LLQtdGB0L7QsiDRgdC+0L7RgtCy0LXRgtGB0YLQstGD0LXRgiDQv9C+0YDRj9C00LrRgyDQvdC10LnRgNC+0L3QvtCyINCyINC/0YDQtdC00YvQtNGD0YnQtdC8INGB0LvQvtC1LlxyXG4gICAgICog0JIg0L/QtdGA0YHQv9C10LrRgtC40LLQtSwg0LIg0L3QtdC/0L7Qu9C90L7RgdCy0Y/Qt9C90L7QuSDQvNC+0LTQtdC70LgsINC60LDQttC00YvQuSDQvdC10LnRgNC+0L0g0LHRg9C00LXRgiDQuNC80LXRgtGMIFxyXG4gICAgICog0YLQsNCx0LvQuNGG0YMg0LjQvdC00LXQutGB0L7QsiDQstGF0L7QtNGP0YnQuNGFINCyINC90LXQs9C+INC90LXQudGA0L7QvdC+0LIuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXRHcmFkaWVudEZvcklucHV0TmV1cm9uKGlucHV0TmV1cm9uSW5kZXg6IG51bWJlcikgOiBudW1iZXIge1xyXG4gICAgICByZXR1cm4gdGhpcy5uZXVyb25zLnJlZHVjZSgoYWNjdW0sIG5ldXJvbik6IG51bWJlciA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGFjY3VtICsgbmV1cm9uLmdldEdyYWRpZW50QnlJbnB1dEluZGV4KGlucHV0TmV1cm9uSW5kZXgpO1xyXG4gICAgICB9LCAwKTtcclxuICAgIH0gICAgICAgXHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Layer.ts\n");

/***/ }),

/***/ "./src/Network.ts":
/*!************************!*\
  !*** ./src/Network.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Layer_1 = __webpack_require__(/*! ./Layer */ \"./src/Layer.ts\");\r\nvar Network = /** @class */ (function () {\r\n    function Network(layersSizes) {\r\n        this.layers = [];\r\n        if (layersSizes.length < 3) {\r\n            throw new Error(\"Количество слоев сети не может быть меньше 3-х\");\r\n        }\r\n        this.inputsNumber = layersSizes[0];\r\n        for (var i = 1; i < layersSizes.length; i++) {\r\n            var previousLayerSize = layersSizes[i - 1];\r\n            var currentLayerSize = layersSizes[i];\r\n            this.layers.push(new Layer_1.Layer(currentLayerSize, previousLayerSize));\r\n        }\r\n    }\r\n    Object.defineProperty(Network.prototype, \"outputLayer\", {\r\n        get: function () {\r\n            return this.layers[this.layers.length - 1];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Network.prototype, \"outputs\", {\r\n        get: function () {\r\n            return this.outputLayer.outputs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Network.prototype.train = function (dataSet, learningRate, epochsNumber) {\r\n        var _this = this;\r\n        for (var i = 0; i < epochsNumber; i++) {\r\n            dataSet.forEach(function (trainingExample) {\r\n                _this.activate(trainingExample.inputs);\r\n                _this.propogate(trainingExample.outputs, learningRate);\r\n            });\r\n        }\r\n    };\r\n    Network.prototype.activate = function (networkInputs) {\r\n        if (networkInputs.length !== this.inputsNumber) {\r\n            throw new Error(\"Количество входов в сеть не соответствует входным данным\");\r\n        }\r\n        this.layers[0].activate(networkInputs);\r\n        for (var i = 1; i < this.layers.length; i++) {\r\n            var previousLayerOutputs = this.layers[i - 1].outputs;\r\n            this.layers[i].activate(previousLayerOutputs);\r\n        }\r\n    };\r\n    Network.prototype.propogate = function (targetValues, learningRate) {\r\n        if (this.outputLayer.size !== targetValues.length) {\r\n            throw new Error(\"Количество выходов из сети не соответствует обучающим данным\");\r\n        }\r\n        this.updateDeltas(targetValues);\r\n        this.layers.forEach(function (layer) {\r\n            layer.updateWeights(learningRate);\r\n        });\r\n    };\r\n    Network.prototype.updateDeltas = function (targetValues) {\r\n        var _this = this;\r\n        var errorsGradient = targetValues.map(function (targetValue, index) { return _this.outputs[index] - targetValue; });\r\n        this.outputLayer.updateDeltas(errorsGradient);\r\n        // начиная с предпоследнего слоя\r\n        for (var i = this.layers.length - 2; i >= 0; i--) {\r\n            var currentLayer = this.layers[i];\r\n            var nextLayer = this.layers[i + 1];\r\n            var gradientsForNeurons = nextLayer.getGradientsForPreviousLayer(currentLayer.size);\r\n            currentLayer.updateDeltas(gradientsForNeurons);\r\n        }\r\n    };\r\n    Network.prototype.reinitializeWeights = function () {\r\n        this.layers.forEach(function (layer) {\r\n            layer.reinitializeWeights();\r\n        });\r\n    };\r\n    Network.prototype.getLayer = function (index) {\r\n        return this.layers[index];\r\n    };\r\n    return Network;\r\n}());\r\nexports.Network = Network;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Network.ts\n");

/***/ }),

/***/ "./src/Neuron.ts":
/*!***********************!*\
  !*** ./src/Neuron.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar squashList = {\r\n    SIGMOID: function (x, isDerivate) {\r\n        var fx = 1 / (1 + Math.exp(-x));\r\n        return isDerivate ? fx * (1 - fx) : fx;\r\n    },\r\n    RELU: function (x, isDerivate) {\r\n        return isDerivate ? (x > 0 ? 1 : 0) : x > 0 ? x : 0;\r\n    },\r\n    TANH: function (x, isDerivate) {\r\n        //@ts-ignore\r\n        return isDerivate ? 1 - Math.pow(Math.tanh(x), 2) : Math.tanh(x);\r\n    }\r\n};\r\nfunction randomDouble(min, max) {\r\n    return min + (max - min) * Math.random();\r\n}\r\nvar Neuron = /** @class */ (function () {\r\n    function Neuron(inputsNumber) {\r\n        this.squash = squashList.SIGMOID;\r\n        this.output = 0;\r\n        this.savedInputs = [];\r\n        this.weights = [];\r\n        this.biasWeight = 0;\r\n        this.sum = 0;\r\n        this.delta = 0;\r\n        this.initializeWeights(inputsNumber);\r\n    }\r\n    Object.defineProperty(Neuron.prototype, \"randomWeight\", {\r\n        get: function () {\r\n            return randomDouble(-1, 1);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Neuron.prototype.initializeWeights = function (weightsNumber) {\r\n        this.weights = [];\r\n        for (var i = 0; i < weightsNumber; i++) {\r\n            this.weights[i] = this.randomWeight;\r\n        }\r\n        this.biasWeight = this.randomWeight;\r\n    };\r\n    Neuron.prototype.activate = function (inputs) {\r\n        this.savedInputs = inputs;\r\n        this.summarize(inputs);\r\n        this.output = this.squash(this.sum);\r\n    };\r\n    Neuron.prototype.summarize = function (inputs) {\r\n        var _this = this;\r\n        if (this.weights.length !== inputs.length) {\r\n            throw new Error(\"Число входов в нейрон не соответствует количеству его весов\");\r\n        }\r\n        this.sum = inputs.reduce(function (accum, input, index) {\r\n            return accum + input * _this.weights[index];\r\n        }, this.biasWeight);\r\n    };\r\n    Neuron.prototype.updateDelta = function (gradient) {\r\n        this.delta = this.squash(this.sum, true) * gradient;\r\n    };\r\n    Neuron.prototype.updateWeights = function (learningRate) {\r\n        var _this = this;\r\n        this.weights = this.weights.map(function (weight, index) {\r\n            return weight - learningRate * _this.delta * _this.savedInputs[index];\r\n        });\r\n        this.biasWeight -= learningRate * this.delta;\r\n    };\r\n    Neuron.prototype.getGradientByInputIndex = function (index) {\r\n        if (index >= this.weights.length) {\r\n            throw new Error(\"Попытка обратиться к несуществующей связи\");\r\n        }\r\n        return this.delta * this.weights[index];\r\n    };\r\n    Neuron.prototype.reinitializeWeights = function () {\r\n        this.initializeWeights(this.weights.length);\r\n    };\r\n    Neuron.squashList = squashList;\r\n    return Neuron;\r\n}());\r\nexports.Neuron = Neuron;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Neuron.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Network_1 = __webpack_require__(/*! ./Network */ \"./src/Network.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\r\nvar network = new Network_1.Network([2, 4, 1]);\r\nvar dataSets = [\r\n    { inputs: [1, 1], outputs: [0] },\r\n    { inputs: [0, 0], outputs: [0] },\r\n    { inputs: [1, 0], outputs: [1] },\r\n    { inputs: [0, 1], outputs: [1] }\r\n];\r\nvar learningOptions = {\r\n    learningRate: 0.7,\r\n    epochsNumber: 5000\r\n};\r\nvar testOptions = {\r\n    allowableError: 0.05,\r\n    iterationsNumber: 100\r\n};\r\nutils_1.testNetwork(network, dataSets, learningOptions, testOptions);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHM/ZmZiNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlFQUFvQztBQUNwQyxtRUFBc0M7QUFFdEMsSUFBTSxPQUFPLEdBQUcsSUFBSSxpQkFBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRXZDLElBQU0sUUFBUSxHQUFHO0lBQ2YsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDaEMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDaEMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUU7SUFDaEMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUU7Q0FDakMsQ0FBQztBQUVGLElBQU0sZUFBZSxHQUFHO0lBQ3RCLFlBQVksRUFBRSxHQUFHO0lBQ2pCLFlBQVksRUFBRSxJQUFJO0NBQ25CLENBQUM7QUFFRixJQUFNLFdBQVcsR0FBRztJQUNsQixjQUFjLEVBQUUsSUFBSTtJQUNwQixnQkFBZ0IsRUFBRSxHQUFHO0NBQ3RCLENBQUM7QUFFRixtQkFBVyxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsZUFBZSxFQUFFLFdBQVcsQ0FBQyxDQUFDIiwiZmlsZSI6Ii4vc3JjL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV0d29yayB9IGZyb20gXCIuL05ldHdvcmtcIjtcclxuaW1wb3J0IHsgdGVzdE5ldHdvcmsgfSBmcm9tIFwiLi91dGlsc1wiO1xyXG5cclxuY29uc3QgbmV0d29yayA9IG5ldyBOZXR3b3JrKFsyLCA0LCAxXSk7XHJcblxyXG5jb25zdCBkYXRhU2V0cyA9IFtcclxuICB7IGlucHV0czogWzEsIDFdLCBvdXRwdXRzOiBbMF0gfSxcclxuICB7IGlucHV0czogWzAsIDBdLCBvdXRwdXRzOiBbMF0gfSxcclxuICB7IGlucHV0czogWzEsIDBdLCBvdXRwdXRzOiBbMV0gfSxcclxuICB7IGlucHV0czogWzAsIDFdLCBvdXRwdXRzOiBbMV0gfVxyXG5dO1xyXG5cclxuY29uc3QgbGVhcm5pbmdPcHRpb25zID0ge1xyXG4gIGxlYXJuaW5nUmF0ZTogMC43LFxyXG4gIGVwb2Noc051bWJlcjogNTAwMFxyXG59O1xyXG5cclxuY29uc3QgdGVzdE9wdGlvbnMgPSB7XHJcbiAgYWxsb3dhYmxlRXJyb3I6IDAuMDUsXHJcbiAgaXRlcmF0aW9uc051bWJlcjogMTAwXHJcbn07XHJcblxyXG50ZXN0TmV0d29yayhuZXR3b3JrLCBkYXRhU2V0cywgbGVhcm5pbmdPcHRpb25zLCB0ZXN0T3B0aW9ucyk7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction testNetwork(network, dataSet, learningOptions, testOptions) {\r\n    var learningRate = learningOptions.learningRate, epochsNumber = learningOptions.epochsNumber;\r\n    var allowableError = testOptions.allowableError, testIterationsNumber = testOptions.iterationsNumber;\r\n    var startTime = performance.now();\r\n    var _loop_1 = function (i) {\r\n        network.reinitializeWeights();\r\n        network.train(dataSet, learningRate, epochsNumber);\r\n        dataSet.forEach(function (trainingExample) {\r\n            network.activate(trainingExample.inputs);\r\n            trainingExample.outputs.forEach(function (idealOutput, index) {\r\n                var actualError = Math.abs(idealOutput - network.outputs[index]);\r\n                if (actualError > allowableError) {\r\n                    printLearningResults(network, dataSet);\r\n                    throw new Error(\"\\u0412\\u043E\\u0437\\u043D\\u0438\\u043A\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430, \\u0432\\u044B\\u0448\\u0435 \\u0434\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u043C\\u043E\\u0439: \" + allowableError + \", \\u043D\\u0430 \" + i + \"-\\u0439 \\u0438\\u0442\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438\");\r\n                }\r\n            });\r\n        });\r\n    };\r\n    for (var i = 0; i < testIterationsNumber; i++) {\r\n        _loop_1(i);\r\n    }\r\n    var spentTime = Math.round(performance.now() - startTime);\r\n    printLearningResults(network, dataSet);\r\n    console.warn(\"\\u0422\\u0435\\u0441\\u0442 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043F\\u0440\\u043E\\u0439\\u0434\\u0435\\u043D \\u0437\\u0430 \" + spentTime + \"ms \\u0441 \\u0434\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u043C\\u043E\\u0439 \\u043E\\u0448\\u0438\\u0431\\u043A\\u043E\\u0439 \" + allowableError);\r\n}\r\nexports.testNetwork = testNetwork;\r\nfunction printLearningResults(network, dataSet) {\r\n    dataSet.forEach(function (trainingExample) {\r\n        network.activate(trainingExample.inputs);\r\n        console.log(trainingExample.inputs.toString() + \" -> \" + network.outputs.toString());\r\n    });\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMudHM/N2RkYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVlBLFNBQWdCLFdBQVcsQ0FDekIsT0FBaUIsRUFDakIsT0FBMkIsRUFDM0IsZUFBaUMsRUFDakMsV0FBeUI7SUFFakIsK0NBQVksRUFBRSwyQ0FBWSxDQUFxQjtJQUVyRCwrQ0FBYyxFQUNkLG1EQUFzQyxDQUN4QjtJQUVoQixJQUFNLFNBQVMsR0FBRyxXQUFXLENBQUMsR0FBRyxFQUFFLENBQUM7NEJBRTNCLENBQUM7UUFDUixPQUFPLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztRQUU5QixPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFFbkQsT0FBTyxDQUFDLE9BQU8sQ0FBQyx5QkFBZTtZQUM3QixPQUFPLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUV6QyxlQUFlLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFDLFdBQVcsRUFBRSxLQUFLO2dCQUNqRCxJQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBRW5FLElBQUksV0FBVyxHQUFHLGNBQWMsRUFBRTtvQkFDaEMsb0JBQW9CLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO29CQUN2QyxNQUFNLElBQUksS0FBSyxDQUNiLG1MQUFxQyxjQUFjLHVCQUFRLENBQUMsNkRBQWEsQ0FDMUUsQ0FBQztpQkFDSDtZQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7O0lBbEJMLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxvQkFBb0IsRUFBRSxDQUFDLEVBQUU7Z0JBQXBDLENBQUM7S0FtQlQ7SUFFRCxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxTQUFTLENBQUMsQ0FBQztJQUU1RCxvQkFBb0IsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDdkMsT0FBTyxDQUFDLElBQUksQ0FDVixpSUFBMkIsU0FBUywwSEFBMkIsY0FBZ0IsQ0FDaEYsQ0FBQztBQUNKLENBQUM7QUF6Q0Qsa0NBeUNDO0FBRUQsU0FBUyxvQkFBb0IsQ0FBQyxPQUFpQixFQUFFLE9BQTJCO0lBQzFFLE9BQU8sQ0FBQyxPQUFPLENBQUMseUJBQWU7UUFDN0IsT0FBTyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekMsT0FBTyxDQUFDLEdBQUcsQ0FDTixlQUFlLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxZQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFJLENBQ3hFLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMiLCJmaWxlIjoiLi9zcmMvdXRpbHMudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUVHJhaW5pbmdFeGFtcGxlLCBJTmV0d29yayB9IGZyb20gXCIuL05ldHdvcmtcIjtcclxuXHJcbnR5cGUgVExlYXJuaW5nT3B0aW9ucyA9IHtcclxuICBsZWFybmluZ1JhdGU6IG51bWJlcjtcclxuICBlcG9jaHNOdW1iZXI6IG51bWJlcjtcclxufTtcclxuXHJcbnR5cGUgVFRlc3RPcHRpb25zID0ge1xyXG4gIGFsbG93YWJsZUVycm9yOiBudW1iZXI7XHJcbiAgaXRlcmF0aW9uc051bWJlcjogbnVtYmVyO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRlc3ROZXR3b3JrKFxyXG4gIG5ldHdvcms6IElOZXR3b3JrLFxyXG4gIGRhdGFTZXQ6IFRUcmFpbmluZ0V4YW1wbGVbXSxcclxuICBsZWFybmluZ09wdGlvbnM6IFRMZWFybmluZ09wdGlvbnMsXHJcbiAgdGVzdE9wdGlvbnM6IFRUZXN0T3B0aW9uc1xyXG4pIHtcclxuICBjb25zdCB7IGxlYXJuaW5nUmF0ZSwgZXBvY2hzTnVtYmVyIH0gPSBsZWFybmluZ09wdGlvbnM7XHJcbiAgY29uc3Qge1xyXG4gICAgYWxsb3dhYmxlRXJyb3IsXHJcbiAgICBpdGVyYXRpb25zTnVtYmVyOiB0ZXN0SXRlcmF0aW9uc051bWJlclxyXG4gIH0gPSB0ZXN0T3B0aW9ucztcclxuXHJcbiAgY29uc3Qgc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XHJcblxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGVzdEl0ZXJhdGlvbnNOdW1iZXI7IGkrKykge1xyXG4gICAgbmV0d29yay5yZWluaXRpYWxpemVXZWlnaHRzKCk7XHJcblxyXG4gICAgbmV0d29yay50cmFpbihkYXRhU2V0LCBsZWFybmluZ1JhdGUsIGVwb2Noc051bWJlcik7XHJcblxyXG4gICAgZGF0YVNldC5mb3JFYWNoKHRyYWluaW5nRXhhbXBsZSA9PiB7XHJcbiAgICAgIG5ldHdvcmsuYWN0aXZhdGUodHJhaW5pbmdFeGFtcGxlLmlucHV0cyk7XHJcblxyXG4gICAgICB0cmFpbmluZ0V4YW1wbGUub3V0cHV0cy5mb3JFYWNoKChpZGVhbE91dHB1dCwgaW5kZXgpID0+IHtcclxuICAgICAgICBjb25zdCBhY3R1YWxFcnJvciA9IE1hdGguYWJzKGlkZWFsT3V0cHV0IC0gbmV0d29yay5vdXRwdXRzW2luZGV4XSk7XHJcblxyXG4gICAgICAgIGlmIChhY3R1YWxFcnJvciA+IGFsbG93YWJsZUVycm9yKSB7XHJcbiAgICAgICAgICBwcmludExlYXJuaW5nUmVzdWx0cyhuZXR3b3JrLCBkYXRhU2V0KTtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICAgICAgYNCS0L7Qt9C90LjQutC70LAg0L7RiNC40LHQutCwLCDQstGL0YjQtSDQtNC+0L/Rg9GB0YLQuNC80L7QuTogJHthbGxvd2FibGVFcnJvcn0sINC90LAgJHtpfS3QuSDQuNGC0LXRgNCw0YbQuNC4YFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjb25zdCBzcGVudFRpbWUgPSBNYXRoLnJvdW5kKHBlcmZvcm1hbmNlLm5vdygpIC0gc3RhcnRUaW1lKTtcclxuXHJcbiAgcHJpbnRMZWFybmluZ1Jlc3VsdHMobmV0d29yaywgZGF0YVNldCk7XHJcbiAgY29uc29sZS53YXJuKFxyXG4gICAgYNCi0LXRgdGCINGD0YHQv9C10YjQvdC+INC/0YDQvtC50LTQtdC9INC30LAgJHtzcGVudFRpbWV9bXMg0YEg0LTQvtC/0YPRgdGC0LjQvNC+0Lkg0L7RiNC40LHQutC+0LkgJHthbGxvd2FibGVFcnJvcn1gXHJcbiAgKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcHJpbnRMZWFybmluZ1Jlc3VsdHMobmV0d29yazogSU5ldHdvcmssIGRhdGFTZXQ6IFRUcmFpbmluZ0V4YW1wbGVbXSkge1xyXG4gIGRhdGFTZXQuZm9yRWFjaCh0cmFpbmluZ0V4YW1wbGUgPT4ge1xyXG4gICAgbmV0d29yay5hY3RpdmF0ZSh0cmFpbmluZ0V4YW1wbGUuaW5wdXRzKTtcclxuICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICBgJHt0cmFpbmluZ0V4YW1wbGUuaW5wdXRzLnRvU3RyaW5nKCl9IC0+ICR7bmV0d29yay5vdXRwdXRzLnRvU3RyaW5nKCl9YFxyXG4gICAgKTtcclxuICB9KTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils.ts\n");

/***/ })

/******/ });