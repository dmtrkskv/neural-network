/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Layer.ts":
/*!**********************!*\
  !*** ./src/Layer.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Neuron_1 = __webpack_require__(/*! ./Neuron */ \"./src/Neuron.ts\");\n/**\n * Слой при прямом и обратном распространении принимает все значения\n * соседнего слоя и каждый нейрон выбирает нужные значения для себя.\n */\nvar Layer = /** @class */ (function () {\n    function Layer(neuronsNumber, eachNeuronInputsNumber) {\n        this.neurons = [];\n        for (var i = 0; i < neuronsNumber; i++) {\n            this.neurons[i] = new Neuron_1.Neuron(eachNeuronInputsNumber);\n        }\n    }\n    Layer.prototype.activate = function (previousLayerOutputs) {\n        this.neurons.forEach(function (neuron) {\n            neuron.activate(previousLayerOutputs);\n        });\n    };\n    Layer.prototype.updateDeltas = function (gradientsForNeurons) {\n        this.neurons.forEach(function (neuron, neuronOutputIndex) {\n            neuron.updateDelta(gradientsForNeurons[neuronOutputIndex]);\n        });\n    };\n    Layer.prototype.updateWeights = function (learningRate) {\n        this.neurons.forEach(function (neuron) { return neuron.updateWeights(learningRate); });\n    };\n    /**\n     * Возвращает градиенты для нейронов, влияющих на данный слой в виде массива.\n     */\n    Layer.prototype.getGradientsForPreviousLayer = function (inputNeuronsNumber) {\n        var gradients = [];\n        for (var i = 0; i < inputNeuronsNumber; i++) {\n            gradients.push(this.getGradientForInputNeuron(i));\n        }\n        return gradients;\n    };\n    /**\n     * Предполагается, что у каждого нейрона порядок весов соответствует порядку нейронов в предыдущем слое.\n     * В перспективе, в неполносвязной модели, каждый нейрон будет иметь\n     * таблицу индексов входящих в него нейронов.\n     */\n    Layer.prototype.getGradientForInputNeuron = function (inputNeuronIndex) {\n        return this.neurons.reduce(function (accum, neuron) {\n            return accum + neuron.getGradientByInputIndex(inputNeuronIndex);\n        }, 0);\n    };\n    Object.defineProperty(Layer.prototype, \"outputs\", {\n        get: function () {\n            return this.neurons.map(function (neuron) { return neuron.output; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"size\", {\n        get: function () {\n            return this.neurons.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Layer;\n}());\nexports.Layer = Layer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvTGF5ZXIudHM/NmM4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNFQUEyQztBQWEzQzs7O0dBR0c7QUFFSDtJQUdJLGVBQ0UsYUFBcUIsRUFDckIsc0JBQThCO1FBSnRCLFlBQU8sR0FBYyxFQUFFLENBQUM7UUFNaEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGFBQWEsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN0QyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksZUFBTSxDQUFDLHNCQUFzQixDQUFDLENBQUM7U0FDdEQ7SUFDSCxDQUFDO0lBRU0sd0JBQVEsR0FBZixVQUFnQixvQkFBOEI7UUFDNUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0JBQU07WUFDekIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ3hDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLDRCQUFZLEdBQW5CLFVBQW9CLG1CQUE2QjtRQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFDLE1BQU0sRUFBRSxpQkFBaUI7WUFDN0MsTUFBTSxDQUFDLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7UUFDN0QsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sNkJBQWEsR0FBcEIsVUFBcUIsWUFBb0I7UUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0JBQU0sSUFBSSxhQUFNLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxFQUFsQyxDQUFrQyxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUVEOztPQUVHO0lBQ0ksNENBQTRCLEdBQW5DLFVBQW9DLGtCQUEwQjtRQUM1RCxJQUFNLFNBQVMsR0FBYSxFQUFFLENBQUM7UUFFL0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGtCQUFrQixFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3BEO1FBRUQsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSx5Q0FBeUIsR0FBaEMsVUFBaUMsZ0JBQXdCO1FBQ3ZELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBQyxLQUFLLEVBQUUsTUFBTTtZQUN2QyxPQUFPLEtBQUssR0FBRyxNQUFNLENBQUMsdUJBQXVCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNsRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDUixDQUFDO0lBRUQsc0JBQVcsMEJBQU87YUFBbEI7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFNLElBQUksYUFBTSxDQUFDLE1BQU0sRUFBYixDQUFhLENBQUMsQ0FBQztRQUNuRCxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLHVCQUFJO2FBQWY7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzdCLENBQUM7OztPQUFBO0lBQ0gsWUFBQztBQUFELENBQUM7QUEzRFUsc0JBQUsiLCJmaWxlIjoiLi9zcmMvTGF5ZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTmV1cm9uLCBOZXVyb24gfSBmcm9tIFwiLi9OZXVyb25cIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUxheWVyIHtcclxuICAgIG91dHB1dHM6IG51bWJlcltdO1xyXG4gICAgc2l6ZTogbnVtYmVyO1xyXG4gIFxyXG4gICAgYWN0aXZhdGUoaW5wdXRzOiBudW1iZXJbXSk6IHZvaWQ7XHJcbiAgICB1cGRhdGVEZWx0YXMoZ3JhZGllbnRzRm9yTmV1cm9uczogbnVtYmVyW10pOiB2b2lkO1xyXG4gICAgdXBkYXRlV2VpZ2h0cyhsZWFybmluZ1JhdGU6IG51bWJlcik6IHZvaWQ7XHJcbiAgICBnZXRHcmFkaWVudEZvcklucHV0TmV1cm9uKGlucHV0TmV1cm9uSW5kZXg6IG51bWJlcikgOiBudW1iZXI7XHJcbiAgICBnZXRHcmFkaWVudHNGb3JQcmV2aW91c0xheWVyKGlucHV0TmV1cm9uc051bWJlcjogbnVtYmVyKSA6IG51bWJlcltdO1xyXG4gIH1cclxuXHJcbi8qKlxyXG4gKiDQodC70L7QuSDQv9GA0Lgg0L/RgNGP0LzQvtC8INC4INC+0LHRgNCw0YLQvdC+0Lwg0YDQsNGB0L/RgNC+0YHRgtGA0LDQvdC10L3QuNC4INC/0YDQuNC90LjQvNCw0LXRgiDQstGB0LUg0LfQvdCw0YfQtdC90LjRjyBcclxuICog0YHQvtGB0LXQtNC90LXQs9C+INGB0LvQvtGPINC4INC60LDQttC00YvQuSDQvdC10LnRgNC+0L0g0LLRi9Cx0LjRgNCw0LXRgiDQvdGD0LbQvdGL0LUg0LfQvdCw0YfQtdC90LjRjyDQtNC70Y8g0YHQtdCx0Y8uXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIExheWVyIGltcGxlbWVudHMgSUxheWVyIHtcclxuICAgIHByb3RlY3RlZCBuZXVyb25zOiBJTmV1cm9uW10gPSBbXTtcclxuICBcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICBuZXVyb25zTnVtYmVyOiBudW1iZXIsXHJcbiAgICAgIGVhY2hOZXVyb25JbnB1dHNOdW1iZXI6IG51bWJlclxyXG4gICAgKSB7ICAgICAgICBcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuZXVyb25zTnVtYmVyOyBpKyspIHtcclxuICAgICAgICB0aGlzLm5ldXJvbnNbaV0gPSBuZXcgTmV1cm9uKGVhY2hOZXVyb25JbnB1dHNOdW1iZXIpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXHJcbiAgICBwdWJsaWMgYWN0aXZhdGUocHJldmlvdXNMYXllck91dHB1dHM6IG51bWJlcltdKTogdm9pZCB7XHJcbiAgICAgIHRoaXMubmV1cm9ucy5mb3JFYWNoKG5ldXJvbiA9PiB7XHJcbiAgICAgICAgbmV1cm9uLmFjdGl2YXRlKHByZXZpb3VzTGF5ZXJPdXRwdXRzKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwZGF0ZURlbHRhcyhncmFkaWVudHNGb3JOZXVyb25zOiBudW1iZXJbXSkgOiB2b2lkIHtcclxuICAgICAgdGhpcy5uZXVyb25zLmZvckVhY2goKG5ldXJvbiwgbmV1cm9uT3V0cHV0SW5kZXgpID0+IHtcclxuICAgICAgICBuZXVyb24udXBkYXRlRGVsdGEoZ3JhZGllbnRzRm9yTmV1cm9uc1tuZXVyb25PdXRwdXRJbmRleF0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlV2VpZ2h0cyhsZWFybmluZ1JhdGU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICB0aGlzLm5ldXJvbnMuZm9yRWFjaChuZXVyb24gPT4gbmV1cm9uLnVwZGF0ZVdlaWdodHMobGVhcm5pbmdSYXRlKSk7XHJcbiAgICB9XHJcbiAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQs9GA0LDQtNC40LXQvdGC0Ysg0LTQu9GPINC90LXQudGA0L7QvdC+0LIsINCy0LvQuNGP0Y7RidC40YUg0L3QsCDQtNCw0L3QvdGL0Lkg0YHQu9C+0Lkg0LIg0LLQuNC00LUg0LzQsNGB0YHQuNCy0LAuXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBnZXRHcmFkaWVudHNGb3JQcmV2aW91c0xheWVyKGlucHV0TmV1cm9uc051bWJlcjogbnVtYmVyKTogbnVtYmVyW10geyAgICBcclxuICAgICAgY29uc3QgZ3JhZGllbnRzOiBudW1iZXJbXSA9IFtdO1xyXG5cclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dE5ldXJvbnNOdW1iZXI7IGkrKykge1xyXG4gICAgICAgICAgZ3JhZGllbnRzLnB1c2godGhpcy5nZXRHcmFkaWVudEZvcklucHV0TmV1cm9uKGkpKVxyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gZ3JhZGllbnRzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog0J/RgNC10LTQv9C+0LvQsNCz0LDQtdGC0YHRjywg0YfRgtC+INGDINC60LDQttC00L7Qs9C+INC90LXQudGA0L7QvdCwINC/0L7RgNGP0LTQvtC6INCy0LXRgdC+0LIg0YHQvtC+0YLQstC10YLRgdGC0LLRg9C10YIg0L/QvtGA0Y/QtNC60YMg0L3QtdC50YDQvtC90L7QsiDQsiDQv9GA0LXQtNGL0LTRg9GJ0LXQvCDRgdC70L7QtS5cclxuICAgICAqINCSINC/0LXRgNGB0L/QtdC60YLQuNCy0LUsINCyINC90LXQv9C+0LvQvdC+0YHQstGP0LfQvdC+0Lkg0LzQvtC00LXQu9C4LCDQutCw0LbQtNGL0Lkg0L3QtdC50YDQvtC9INCx0YPQtNC10YIg0LjQvNC10YLRjCBcclxuICAgICAqINGC0LDQsdC70LjRhtGDINC40L3QtNC10LrRgdC+0LIg0LLRhdC+0LTRj9GJ0LjRhSDQsiDQvdC10LPQviDQvdC10LnRgNC+0L3QvtCyLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0R3JhZGllbnRGb3JJbnB1dE5ldXJvbihpbnB1dE5ldXJvbkluZGV4OiBudW1iZXIpIDogbnVtYmVyIHtcclxuICAgICAgcmV0dXJuIHRoaXMubmV1cm9ucy5yZWR1Y2UoKGFjY3VtLCBuZXVyb24pOiBudW1iZXIgPT4ge1xyXG4gICAgICAgIHJldHVybiBhY2N1bSArIG5ldXJvbi5nZXRHcmFkaWVudEJ5SW5wdXRJbmRleChpbnB1dE5ldXJvbkluZGV4KTtcclxuICAgICAgfSwgMCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBwdWJsaWMgZ2V0IG91dHB1dHMoKTogbnVtYmVyW10ge1xyXG4gICAgICByZXR1cm4gdGhpcy5uZXVyb25zLm1hcChuZXVyb24gPT4gbmV1cm9uLm91dHB1dCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBzaXplKCk6IG51bWJlciB7XHJcbiAgICAgIHJldHVybiB0aGlzLm5ldXJvbnMubGVuZ3RoO1xyXG4gICAgfVxyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Layer.ts\n");

/***/ }),

/***/ "./src/Network.ts":
/*!************************!*\
  !*** ./src/Network.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Layer_1 = __webpack_require__(/*! ./Layer */ \"./src/Layer.ts\");\nvar Network = /** @class */ (function () {\n    function Network(layersSizes) {\n        this.layers = [];\n        if (layersSizes.length < 3) {\n            throw new Error(\"Количество слоев сети не может быть меньше 3-х\");\n        }\n        this.inputsNumber = layersSizes[0];\n        /**\n         * Фактически первый слой не является слоем.\n         */\n        for (var i = 1; i < layersSizes.length; i++) {\n            var previousLayerSize = layersSizes[i - 1];\n            var currentLayerSize = layersSizes[i];\n            this.layers.push(new Layer_1.Layer(currentLayerSize, previousLayerSize));\n        }\n    }\n    Network.prototype.activate = function (networkInputs) {\n        if (networkInputs.length !== this.inputsNumber) {\n            throw new Error(\"Количество входов в сеть не соответствует входным данным\");\n        }\n        this.layers[0].activate(networkInputs);\n        for (var i = 1; i < this.layers.length; i++) {\n            var previousLayerOutputs = this.layers[i - 1].outputs;\n            this.layers[i].activate(previousLayerOutputs);\n        }\n    };\n    Network.prototype.train = function (dataSets, learningRate, epochsNumber) {\n        var _this = this;\n        for (var i = 0; i < epochsNumber; i++) {\n            dataSets.forEach(function (dataSet) {\n                _this.activate(dataSet.inputs);\n                _this.propogate(dataSet.outputs, learningRate);\n            });\n        }\n    };\n    Network.prototype.getLayer = function (index) {\n        return this.layers[index];\n    };\n    Object.defineProperty(Network.prototype, \"outputs\", {\n        get: function () {\n            return this.outputLayer.outputs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Network.prototype.propogate = function (targetValues, learningRate) {\n        var _this = this;\n        if (this.outputLayer.size !== targetValues.length) {\n            throw new Error(\"Количество выходов из сети не соответствует обучающим данным\");\n        }\n        var errors = targetValues.map(function (targetValue, index) { return _this.outputs[index] - targetValue; });\n        this.outputLayer.updateDeltas(errors);\n        for (var i = this.layers.length - 2; i >= 0; i--) {\n            var currentLayer = this.layers[i];\n            var nextLayer = this.layers[i + 1];\n            var gradientsForNeurons = nextLayer.getGradientsForPreviousLayer(currentLayer.size);\n            currentLayer.updateDeltas(gradientsForNeurons);\n        }\n        this.layers.forEach(function (layer) {\n            layer.updateWeights(learningRate);\n        });\n    };\n    Object.defineProperty(Network.prototype, \"outputLayer\", {\n        get: function () {\n            return this.layers[this.layers.length - 1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Network;\n}());\nexports.Network = Network;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvTmV0d29yay50cz8zOGI4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUVBQXdDO0FBYXhDO0lBSUUsaUJBQVksV0FBcUI7UUFIekIsV0FBTSxHQUFhLEVBQUUsQ0FBQztRQUk1QixJQUFJLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzFCLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0RBQWdELENBQUMsQ0FBQztTQUNuRTtRQUVELElBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRW5DOztXQUVHO1FBQ0gsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0MsSUFBTSxpQkFBaUIsR0FBRyxXQUFXLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzdDLElBQU0sZ0JBQWdCLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRXhDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksYUFBSyxDQUFDLGdCQUFnQixFQUFFLGlCQUFpQixDQUFDLENBQUMsQ0FBQztTQUNsRTtJQUNILENBQUM7SUFFTSwwQkFBUSxHQUFmLFVBQWdCLGFBQXVCO1FBQ3JDLElBQUksYUFBYSxDQUFDLE1BQU0sS0FBSyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQzlDLE1BQU0sSUFBSSxLQUFLLENBQUMsMERBQTBELENBQUMsQ0FBQztTQUM3RTtRQUVELElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRXZDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMzQyxJQUFNLG9CQUFvQixHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztZQUV4RCxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1NBQy9DO0lBQ0gsQ0FBQztJQUVNLHVCQUFLLEdBQVosVUFBYSxRQUFvQixFQUFFLFlBQW9CLEVBQUUsWUFBb0I7UUFBN0UsaUJBT0M7UUFOQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsWUFBWSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JDLFFBQVEsQ0FBQyxPQUFPLENBQUMsaUJBQU87Z0JBQ3RCLEtBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM5QixLQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7WUFDaEQsQ0FBQyxDQUFDLENBQUM7U0FDSjtJQUNILENBQUM7SUFFTSwwQkFBUSxHQUFmLFVBQWdCLEtBQWE7UUFDM0IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxzQkFBVyw0QkFBTzthQUFsQjtZQUNFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUM7UUFDbEMsQ0FBQzs7O09BQUE7SUFFTywyQkFBUyxHQUFqQixVQUFrQixZQUFzQixFQUFFLFlBQW9CO1FBQTlELGlCQW9CQztRQW5CQyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxLQUFLLFlBQVksQ0FBQyxNQUFNLEVBQUU7WUFDakQsTUFBTSxJQUFJLEtBQUssQ0FBQyw4REFBOEQsQ0FBQyxDQUFDO1NBQ2pGO1FBRUQsSUFBTSxNQUFNLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyxVQUFDLFdBQVcsRUFBRSxLQUFLLElBQUssWUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxXQUFXLEVBQWpDLENBQWlDLENBQUMsQ0FBQztRQUMzRixJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV0QyxLQUFLLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2hELElBQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDcEMsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFFckMsSUFBTSxtQkFBbUIsR0FBYSxTQUFTLENBQUMsNEJBQTRCLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBRWhHLFlBQVksQ0FBQyxZQUFZLENBQUMsbUJBQW1CLENBQUMsQ0FBQztTQUNoRDtRQUVELElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGVBQUs7WUFDdkIsS0FBSyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNwQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRUQsc0JBQVksZ0NBQVc7YUFBdkI7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDN0MsQ0FBQzs7O09BQUE7SUFDSCxjQUFDO0FBQUQsQ0FBQztBQTlFWSwwQkFBTyIsImZpbGUiOiIuL3NyYy9OZXR3b3JrLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUxheWVyLCBMYXllciB9IGZyb20gXCIuL0xheWVyXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElOZXR3b3JrIHtcclxuICBvdXRwdXRzOiBudW1iZXJbXTtcclxuICBhY3RpdmF0ZShpbnB1dHM6IG51bWJlcltdKTogdm9pZDtcclxuICB0cmFpbihkYXRhU2V0czogSURhdGFTZXRbXSwgbGVhcm5pbmdSYXRlOiBudW1iZXIsIGVwb2Noc051bWJlcjogbnVtYmVyKTogdm9pZDtcclxufVxyXG5cclxuaW50ZXJmYWNlIElEYXRhU2V0IHtcclxuICAgIGlucHV0czogbnVtYmVyW107XHJcbiAgICBvdXRwdXRzOiBudW1iZXJbXTsgICBcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIE5ldHdvcmsgaW1wbGVtZW50cyBJTmV0d29yayB7XHJcbiAgcHJpdmF0ZSBsYXllcnM6IElMYXllcltdID0gW107XHJcbiAgcHJpdmF0ZSBpbnB1dHNOdW1iZXI6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IobGF5ZXJzU2l6ZXM6IG51bWJlcltdKSB7IFxyXG4gICAgaWYgKGxheWVyc1NpemVzLmxlbmd0aCA8IDMpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0JrQvtC70LjRh9C10YHRgtCy0L4g0YHQu9C+0LXQsiDRgdC10YLQuCDQvdC1INC80L7QttC10YIg0LHRi9GC0Ywg0LzQtdC90YzRiNC1IDMt0YVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5pbnB1dHNOdW1iZXIgPSBsYXllcnNTaXplc1swXTsgICAgXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDQpNCw0LrRgtC40YfQtdGB0LrQuCDQv9C10YDQstGL0Lkg0YHQu9C+0Lkg0L3QtSDRj9Cy0LvRj9C10YLRgdGPINGB0LvQvtC10LwuXHJcbiAgICAgKi9cclxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgbGF5ZXJzU2l6ZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgY29uc3QgcHJldmlvdXNMYXllclNpemUgPSBsYXllcnNTaXplc1tpIC0gMV07XHJcbiAgICAgIGNvbnN0IGN1cnJlbnRMYXllclNpemUgPSBsYXllcnNTaXplc1tpXTtcclxuXHJcbiAgICAgIHRoaXMubGF5ZXJzLnB1c2gobmV3IExheWVyKGN1cnJlbnRMYXllclNpemUsIHByZXZpb3VzTGF5ZXJTaXplKSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWN0aXZhdGUobmV0d29ya0lucHV0czogbnVtYmVyW10pIHtcclxuICAgIGlmIChuZXR3b3JrSW5wdXRzLmxlbmd0aCAhPT0gdGhpcy5pbnB1dHNOdW1iZXIpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0JrQvtC70LjRh9C10YHRgtCy0L4g0LLRhdC+0LTQvtCyINCyINGB0LXRgtGMINC90LUg0YHQvtC+0YLQstC10YLRgdGC0LLRg9C10YIg0LLRhdC+0LTQvdGL0Lwg0LTQsNC90L3Ri9C8XCIpO1xyXG4gICAgfSAgICBcclxuXHJcbiAgICB0aGlzLmxheWVyc1swXS5hY3RpdmF0ZShuZXR3b3JrSW5wdXRzKTsgICAgXHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCB0aGlzLmxheWVycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBjb25zdCBwcmV2aW91c0xheWVyT3V0cHV0cyA9IHRoaXMubGF5ZXJzW2kgLSAxXS5vdXRwdXRzO1xyXG5cclxuICAgICAgdGhpcy5sYXllcnNbaV0uYWN0aXZhdGUocHJldmlvdXNMYXllck91dHB1dHMpO1xyXG4gICAgfVxyXG4gIH0gIFxyXG5cclxuICBwdWJsaWMgdHJhaW4oZGF0YVNldHM6IElEYXRhU2V0W10sIGxlYXJuaW5nUmF0ZTogbnVtYmVyLCBlcG9jaHNOdW1iZXI6IG51bWJlcik6IHZvaWQge1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlcG9jaHNOdW1iZXI7IGkrKykge1xyXG4gICAgICBkYXRhU2V0cy5mb3JFYWNoKGRhdGFTZXQgPT4ge1xyXG4gICAgICAgIHRoaXMuYWN0aXZhdGUoZGF0YVNldC5pbnB1dHMpO1xyXG4gICAgICAgIHRoaXMucHJvcG9nYXRlKGRhdGFTZXQub3V0cHV0cywgbGVhcm5pbmdSYXRlKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0TGF5ZXIoaW5kZXg6IG51bWJlcikgOiBJTGF5ZXIge1xyXG4gICAgcmV0dXJuIHRoaXMubGF5ZXJzW2luZGV4XTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXQgb3V0cHV0cygpOiBudW1iZXJbXSB7XHJcbiAgICByZXR1cm4gdGhpcy5vdXRwdXRMYXllci5vdXRwdXRzO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBwcm9wb2dhdGUodGFyZ2V0VmFsdWVzOiBudW1iZXJbXSwgbGVhcm5pbmdSYXRlOiBudW1iZXIpIHsgICAgXHJcbiAgICBpZiAodGhpcy5vdXRwdXRMYXllci5zaXplICE9PSB0YXJnZXRWYWx1ZXMubGVuZ3RoKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcItCa0L7Qu9C40YfQtdGB0YLQstC+INCy0YvRhdC+0LTQvtCyINC40Lcg0YHQtdGC0Lgg0L3QtSDRgdC+0L7RgtCy0LXRgtGB0YLQstGD0LXRgiDQvtCx0YPRh9Cw0Y7RidC40Lwg0LTQsNC90L3Ri9C8XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGVycm9ycyA9IHRhcmdldFZhbHVlcy5tYXAoKHRhcmdldFZhbHVlLCBpbmRleCkgPT4gdGhpcy5vdXRwdXRzW2luZGV4XSAtIHRhcmdldFZhbHVlKTtcclxuICAgIHRoaXMub3V0cHV0TGF5ZXIudXBkYXRlRGVsdGFzKGVycm9ycyk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IHRoaXMubGF5ZXJzLmxlbmd0aCAtIDI7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICAgIGNvbnN0IGN1cnJlbnRMYXllciA9IHRoaXMubGF5ZXJzW2ldO1xyXG4gICAgICBjb25zdCBuZXh0TGF5ZXIgPSB0aGlzLmxheWVyc1tpICsgMV07XHJcblxyXG4gICAgICBjb25zdCBncmFkaWVudHNGb3JOZXVyb25zOiBudW1iZXJbXSA9IG5leHRMYXllci5nZXRHcmFkaWVudHNGb3JQcmV2aW91c0xheWVyKGN1cnJlbnRMYXllci5zaXplKTsgIFxyXG4gICAgIFxyXG4gICAgICBjdXJyZW50TGF5ZXIudXBkYXRlRGVsdGFzKGdyYWRpZW50c0Zvck5ldXJvbnMpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMubGF5ZXJzLmZvckVhY2gobGF5ZXIgPT4ge1xyXG4gICAgICBsYXllci51cGRhdGVXZWlnaHRzKGxlYXJuaW5nUmF0ZSk7XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXQgb3V0cHV0TGF5ZXIoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5sYXllcnNbdGhpcy5sYXllcnMubGVuZ3RoIC0gMV07XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Network.ts\n");

/***/ }),

/***/ "./src/Neuron.ts":
/*!***********************!*\
  !*** ./src/Neuron.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar squash = {\n    SIGMOID: function (x, isDerivate) {\n        var fx = 1 / (1 + Math.exp(-x));\n        return isDerivate ? fx * (1 - fx) : fx;\n    }\n};\nfunction randomDouble(min, max) {\n    return min + (max - min) * Math.random();\n}\nvar Neuron = /** @class */ (function () {\n    function Neuron(inputsNumber) {\n        this.output = 0;\n        this.savedInputs = [];\n        this.weights = [];\n        this.biasWeight = 0;\n        this.sum = 0;\n        this.delta = 0;\n        this.initializeWeights(inputsNumber);\n    }\n    Neuron.prototype.activate = function (inputs) {\n        this.savedInputs = inputs;\n        this.summarize(inputs);\n        this.output = squash.SIGMOID(this.sum);\n    };\n    Neuron.prototype.updateDelta = function (gradient) {\n        this.delta = squash.SIGMOID(this.sum, true) * gradient;\n    };\n    Neuron.prototype.updateWeights = function (learningRate) {\n        var _this = this;\n        this.weights = this.weights.map(function (weight, index) {\n            return weight - learningRate * _this.delta * _this.savedInputs[index];\n        });\n    };\n    Neuron.prototype.getGradientByInputIndex = function (index) {\n        if (index >= this.weights.length) {\n            throw new Error(\"Попытка обратиться к несуществующей связи\");\n        }\n        return this.delta * this.weights[index];\n    };\n    Neuron.prototype.summarize = function (inputs) {\n        var _this = this;\n        if (this.weights.length !== inputs.length) {\n            throw new Error(\"Число входов в нейрон не соответствует количеству его весов\");\n        }\n        this.sum = inputs.reduce(function (accum, input, index) {\n            return accum + input * _this.weights[index];\n        }, this.biasWeight);\n    };\n    Neuron.prototype.initializeWeights = function (weightsNumber) {\n        this.weights = [];\n        for (var i = 0; i < weightsNumber; i++) {\n            this.weights[i] = this.randomNumber;\n        }\n        // this.biasWeight = this.randomNumber;\n    };\n    Object.defineProperty(Neuron.prototype, \"randomNumber\", {\n        get: function () {\n            return randomDouble(-10, 10);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Neuron;\n}());\nexports.Neuron = Neuron;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvTmV1cm9uLnRzPzA4ZTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFTQyxJQUFNLE1BQU0sR0FBRztJQUNaLE9BQU8sRUFBUCxVQUFRLENBQVMsRUFBRSxVQUFvQjtRQUNyQyxJQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEMsT0FBTyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3pDLENBQUM7Q0FDRixDQUFDO0FBRUYsU0FBUyxZQUFZLENBQUMsR0FBVyxFQUFFLEdBQVc7SUFDNUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQzNDLENBQUM7QUFFRDtJQVdFLGdCQUFZLFlBQW9CO1FBVnpCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFFbEIsZ0JBQVcsR0FBYSxFQUFFLENBQUM7UUFFM0IsWUFBTyxHQUFhLEVBQUUsQ0FBQztRQUN2QixlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLFFBQUcsR0FBVyxDQUFDLENBQUM7UUFFaEIsVUFBSyxHQUFXLENBQUMsQ0FBQztRQUd4QixJQUFJLENBQUMsaUJBQWlCLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVNLHlCQUFRLEdBQWYsVUFBZ0IsTUFBZ0I7UUFDOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUM7UUFFMUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN2QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFTSw0QkFBVyxHQUFsQixVQUFtQixRQUFnQjtRQUNqQyxJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUM7SUFDekQsQ0FBQztJQUVNLDhCQUFhLEdBQXBCLFVBQXFCLFlBQW9CO1FBQXpDLGlCQUlDO1FBSEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFDLE1BQU0sRUFBRSxLQUFLO1lBQzVDLE9BQU8sTUFBTSxHQUFHLFlBQVksR0FBRyxLQUFJLENBQUMsS0FBSyxHQUFHLEtBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sd0NBQXVCLEdBQTlCLFVBQStCLEtBQWE7UUFDMUMsSUFBSSxLQUFLLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUU7WUFDaEMsTUFBTSxJQUFJLEtBQUssQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO1NBQzlEO1FBRUQsT0FBTyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVPLDBCQUFTLEdBQWpCLFVBQWtCLE1BQWdCO1FBQWxDLGlCQVVDO1FBVEMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFO1lBQ3pDLE1BQU0sSUFBSSxLQUFLLENBQ2IsNkRBQTZELENBQzlELENBQUM7U0FDSDtRQUVELElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSztZQUMzQyxPQUFPLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QyxDQUFDLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUNyQixDQUFDO0lBRU8sa0NBQWlCLEdBQXpCLFVBQTBCLGFBQXFCO1FBQzdDLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBRWxCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxhQUFhLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDdEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1NBQ3JDO1FBRUQsdUNBQXVDO0lBQ3pDLENBQUM7SUFFRCxzQkFBWSxnQ0FBWTthQUF4QjtZQUNFLE9BQU8sWUFBWSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQy9CLENBQUM7OztPQUFBO0lBQ0gsYUFBQztBQUFELENBQUM7QUFqRVksd0JBQU0iLCJmaWxlIjoiLi9zcmMvTmV1cm9uLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBJTmV1cm9uIHtcclxuICAgIG91dHB1dDogbnVtYmVyO1xyXG4gIFxyXG4gICAgYWN0aXZhdGUoaW5wdXRzOiBudW1iZXJbXSk6IHZvaWQ7XHJcbiAgICB1cGRhdGVEZWx0YShncmFkaWVudDogbnVtYmVyKTogdm9pZDtcclxuICAgIHVwZGF0ZVdlaWdodHMobGVhcm5pbmdSYXRlOiBudW1iZXIpOiB2b2lkO1xyXG4gICAgZ2V0R3JhZGllbnRCeUlucHV0SW5kZXgoaW5kZXg6IG51bWJlcikgOiBudW1iZXI7XHJcbiAgfVxyXG5cclxuIGNvbnN0IHNxdWFzaCA9IHtcclxuICAgIFNJR01PSUQoeDogbnVtYmVyLCBpc0Rlcml2YXRlPzogYm9vbGVhbik6IG51bWJlciB7XHJcbiAgICAgIGNvbnN0IGZ4ID0gMSAvICgxICsgTWF0aC5leHAoLXgpKTtcclxuICAgICAgcmV0dXJuIGlzRGVyaXZhdGUgPyBmeCAqICgxIC0gZngpIDogZng7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgZnVuY3Rpb24gcmFuZG9tRG91YmxlKG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcikgOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIG1pbiArIChtYXggLSBtaW4pICogTWF0aC5yYW5kb20oKTtcclxuICB9XHJcbiAgXHJcbiAgZXhwb3J0IGNsYXNzIE5ldXJvbiBpbXBsZW1lbnRzIElOZXVyb24ge1xyXG4gICAgcHVibGljIG91dHB1dDogbnVtYmVyID0gMDtcclxuXHJcbiAgICBwcml2YXRlIHNhdmVkSW5wdXRzOiBudW1iZXJbXSA9IFtdO1xyXG5cclxuICAgIHByaXZhdGUgd2VpZ2h0czogbnVtYmVyW10gPSBbXTtcclxuICAgIHByaXZhdGUgYmlhc1dlaWdodDogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgc3VtOiBudW1iZXIgPSAwO1xyXG5cclxuICAgIHByaXZhdGUgZGVsdGE6IG51bWJlciA9IDA7XHJcbiAgXHJcbiAgICBjb25zdHJ1Y3RvcihpbnB1dHNOdW1iZXI6IG51bWJlcikge1xyXG4gICAgICB0aGlzLmluaXRpYWxpemVXZWlnaHRzKGlucHV0c051bWJlcik7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBwdWJsaWMgYWN0aXZhdGUoaW5wdXRzOiBudW1iZXJbXSk6IHZvaWQge1xyXG4gICAgICB0aGlzLnNhdmVkSW5wdXRzID0gaW5wdXRzO1xyXG5cclxuICAgICAgdGhpcy5zdW1tYXJpemUoaW5wdXRzKTtcclxuICAgICAgdGhpcy5vdXRwdXQgPSBzcXVhc2guU0lHTU9JRCh0aGlzLnN1bSk7XHJcbiAgICB9ICAgXHJcbiAgICBcclxuICAgIHB1YmxpYyB1cGRhdGVEZWx0YShncmFkaWVudDogbnVtYmVyKSA6IHZvaWQge1xyXG4gICAgICB0aGlzLmRlbHRhID0gc3F1YXNoLlNJR01PSUQodGhpcy5zdW0sIHRydWUpICogZ3JhZGllbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwZGF0ZVdlaWdodHMobGVhcm5pbmdSYXRlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgdGhpcy53ZWlnaHRzID0gdGhpcy53ZWlnaHRzLm1hcCgod2VpZ2h0LCBpbmRleCkgPT4ge1xyXG4gICAgICAgIHJldHVybiB3ZWlnaHQgLSBsZWFybmluZ1JhdGUgKiB0aGlzLmRlbHRhICogdGhpcy5zYXZlZElucHV0c1tpbmRleF07XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRHcmFkaWVudEJ5SW5wdXRJbmRleChpbmRleDogbnVtYmVyKSA6IG51bWJlciB7XHJcbiAgICAgIGlmIChpbmRleCA+PSB0aGlzLndlaWdodHMubGVuZ3RoKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwi0J/QvtC/0YvRgtC60LAg0L7QsdGA0LDRgtC40YLRjNGB0Y8g0Log0L3QtdGB0YPRidC10YHRgtCy0YPRjtGJ0LXQuSDRgdCy0Y/Qt9C4XCIpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gdGhpcy5kZWx0YSAqIHRoaXMud2VpZ2h0c1tpbmRleF07XHJcbiAgICB9ICBcclxuICBcclxuICAgIHByaXZhdGUgc3VtbWFyaXplKGlucHV0czogbnVtYmVyW10pOiB2b2lkIHtcclxuICAgICAgaWYgKHRoaXMud2VpZ2h0cy5sZW5ndGggIT09IGlucHV0cy5sZW5ndGgpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgICBcItCn0LjRgdC70L4g0LLRhdC+0LTQvtCyINCyINC90LXQudGA0L7QvSDQvdC1INGB0L7QvtGC0LLQtdGC0YHRgtCy0YPQtdGCINC60L7Qu9C40YfQtdGB0YLQstGDINC10LPQviDQstC10YHQvtCyXCJcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLnN1bSA9IGlucHV0cy5yZWR1Y2UoKGFjY3VtLCBpbnB1dCwgaW5kZXgpOiBudW1iZXIgPT4ge1xyXG4gICAgICAgIHJldHVybiBhY2N1bSArIGlucHV0ICogdGhpcy53ZWlnaHRzW2luZGV4XTtcclxuICAgICAgfSwgdGhpcy5iaWFzV2VpZ2h0KVxyXG4gICAgfVxyXG4gIFxyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplV2VpZ2h0cyh3ZWlnaHRzTnVtYmVyOiBudW1iZXIpIHsgICBcclxuICAgICAgdGhpcy53ZWlnaHRzID0gW107XHJcblxyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHdlaWdodHNOdW1iZXI7IGkrKykge1xyXG4gICAgICAgIHRoaXMud2VpZ2h0c1tpXSA9IHRoaXMucmFuZG9tTnVtYmVyO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyB0aGlzLmJpYXNXZWlnaHQgPSB0aGlzLnJhbmRvbU51bWJlcjtcclxuICAgIH0gICAgXHJcblxyXG4gICAgcHJpdmF0ZSBnZXQgcmFuZG9tTnVtYmVyKCkgOiBudW1iZXIge1xyXG4gICAgICByZXR1cm4gcmFuZG9tRG91YmxlKC0xMCwgMTApO1xyXG4gICAgfVxyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Neuron.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Network_1 = __webpack_require__(/*! ./Network */ \"./src/Network.ts\");\nvar network = new Network_1.Network([2, 2, 1]);\nvar dataSets = [\n    { inputs: [1, 1], outputs: [0] },\n    { inputs: [0, 0], outputs: [0] },\n    { inputs: [1, 0], outputs: [1] },\n    { inputs: [0, 1], outputs: [1] },\n];\nvar learningRate = .7;\nvar epochsNumber = 10000;\nnetwork.train(dataSets, learningRate, epochsNumber);\ndataSets.forEach(function (dataSet) {\n    network.activate(dataSet.inputs);\n    console.log(dataSet.inputs.toString() + \" -> \" + network.outputs.toString());\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHM/ZmZiNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlFQUFvQztBQUVwQyxJQUFNLE9BQU8sR0FBRyxJQUFJLGlCQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFdkMsSUFBTSxRQUFRLEdBQUc7SUFDZixFQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQztJQUM5QixFQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQztJQUM5QixFQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQztJQUM5QixFQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBQztDQUMvQixDQUFDO0FBRUYsSUFBTSxZQUFZLEdBQUcsRUFBRSxDQUFDO0FBQ3hCLElBQU0sWUFBWSxHQUFHLEtBQUssQ0FBQztBQUUzQixPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFFcEQsUUFBUSxDQUFDLE9BQU8sQ0FBQyxpQkFBTztJQUN0QixPQUFPLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNqQyxPQUFPLENBQUMsR0FBRyxDQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLFlBQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUksQ0FBQyxDQUFDO0FBQy9FLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6Ii4vc3JjL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV0d29yayB9IGZyb20gXCIuL05ldHdvcmtcIjtcclxuXHJcbmNvbnN0IG5ldHdvcmsgPSBuZXcgTmV0d29yayhbMiwgMiwgMV0pO1xyXG5cclxuY29uc3QgZGF0YVNldHMgPSBbXHJcbiAge2lucHV0czogWzEsIDFdLCBvdXRwdXRzOiBbMF19LFxyXG4gIHtpbnB1dHM6IFswLCAwXSwgb3V0cHV0czogWzBdfSxcclxuICB7aW5wdXRzOiBbMSwgMF0sIG91dHB1dHM6IFsxXX0sXHJcbiAge2lucHV0czogWzAsIDFdLCBvdXRwdXRzOiBbMV19LFxyXG5dO1xyXG5cclxuY29uc3QgbGVhcm5pbmdSYXRlID0gLjc7XHJcbmNvbnN0IGVwb2Noc051bWJlciA9IDEwMDAwO1xyXG5cclxubmV0d29yay50cmFpbihkYXRhU2V0cywgbGVhcm5pbmdSYXRlLCBlcG9jaHNOdW1iZXIpO1xyXG5cclxuZGF0YVNldHMuZm9yRWFjaChkYXRhU2V0ID0+IHtcclxuICBuZXR3b3JrLmFjdGl2YXRlKGRhdGFTZXQuaW5wdXRzKTtcclxuICBjb25zb2xlLmxvZyhgJHtkYXRhU2V0LmlucHV0cy50b1N0cmluZygpfSAtPiAke25ldHdvcmsub3V0cHV0cy50b1N0cmluZygpfWApO1xyXG59KTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ });